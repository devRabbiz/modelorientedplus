//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MoPlus.ViewModel.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class DisplayValues {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DisplayValues() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MoPlus.ViewModel.Resources.DisplayValues", typeof(DisplayValues).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Add.
        /// </summary>
        internal static string Button_Add {
            get {
                return ResourceManager.GetString("Button_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Cancel.
        /// </summary>
        internal static string Button_Cancel {
            get {
                return ResourceManager.GetString("Button_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Close.
        /// </summary>
        internal static string Button_Close {
            get {
                return ResourceManager.GetString("Button_Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Initialize.
        /// </summary>
        internal static string Button_Defaults {
            get {
                return ResourceManager.GetString("Button_Defaults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug/Continue (F5).
        /// </summary>
        internal static string Button_Go_ToolTip {
            get {
                return ResourceManager.GetString("Button_Go_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _New.
        /// </summary>
        internal static string Button_New {
            get {
                return ResourceManager.GetString("Button_New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _OK.
        /// </summary>
        internal static string Button_OK {
            get {
                return ResourceManager.GetString("Button_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Parse Content.
        /// </summary>
        internal static string Button_ParseContent {
            get {
                return ResourceManager.GetString("Button_ParseContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Parse Output.
        /// </summary>
        internal static string Button_ParseOutput {
            get {
                return ResourceManager.GetString("Button_ParseOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Reset.
        /// </summary>
        internal static string Button_Reset {
            get {
                return ResourceManager.GetString("Button_Reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Select.
        /// </summary>
        internal static string Button_Select {
            get {
                return ResourceManager.GetString("Button_Select", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to S_elect.
        /// </summary>
        internal static string Button_SelectNext {
            get {
                return ResourceManager.GetString("Button_SelectNext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop (Shift +F5).
        /// </summary>
        internal static string Button_Stop_ToolTip {
            get {
                return ResourceManager.GetString("Button_Stop_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Update.
        /// </summary>
        internal static string Button_Update {
            get {
                return ResourceManager.GetString("Button_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quit Jobs.
        /// </summary>
        internal static string ContextMenu_CancelJobs {
            get {
                return ResourceManager.GetString("ContextMenu_CancelJobs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For quitting any running jobs..
        /// </summary>
        internal static string ContextMenu_CancelJobsToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_CancelJobsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear Text.
        /// </summary>
        internal static string ContextMenu_ClearText {
            get {
                return ResourceManager.GetString("ContextMenu_ClearText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        internal static string ContextMenu_Close {
            get {
                return ResourceManager.GetString("ContextMenu_Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close All But This.
        /// </summary>
        internal static string ContextMenu_CloseOtherTabs {
            get {
                return ResourceManager.GetString("ContextMenu_CloseOtherTabs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close all other tabs but this one (will prompt to save changes)..
        /// </summary>
        internal static string ContextMenu_CloseOtherTabsToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_CloseOtherTabsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        internal static string ContextMenu_CloseTab {
            get {
                return ResourceManager.GetString("ContextMenu_CloseTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close this tab (will prompt to save changes)..
        /// </summary>
        internal static string ContextMenu_CloseTabToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_CloseTabToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For closing this solution (will be prompted to save changes)..
        /// </summary>
        internal static string ContextMenu_CloseToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_CloseToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compile Specification Source Data.
        /// </summary>
        internal static string ContextMenu_CompileSpecificationSourceData {
            get {
                return ResourceManager.GetString("ContextMenu_CompileSpecificationSourceData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For updating the M+ solution model based on its (updated) specfication source data..
        /// </summary>
        internal static string ContextMenu_CompileSpecificationSourceDataToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_CompileSpecificationSourceDataToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        internal static string ContextMenu_Delete {
            get {
                return ResourceManager.GetString("ContextMenu_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For deleting the selected item (will be prompted for a confirmation)..
        /// </summary>
        internal static string ContextMenu_DeleteToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_DeleteToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit.
        /// </summary>
        internal static string ContextMenu_Edit {
            get {
                return ResourceManager.GetString("ContextMenu_Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For editing the selected item..
        /// </summary>
        internal static string ContextMenu_EditToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_EditToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage Tags.
        /// </summary>
        internal static string ContextMenu_ManageTags {
            get {
                return ResourceManager.GetString("ContextMenu_ManageTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For managing the tagging of items in the entire model..
        /// </summary>
        internal static string ContextMenu_ManageTagsToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_ManageTagsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Audit Property.
        /// </summary>
        internal static string ContextMenu_NewAuditProperty {
            get {
                return ResourceManager.GetString("ContextMenu_NewAuditProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating audit properties that are standard for every entity..
        /// </summary>
        internal static string ContextMenu_NewAuditPropertyToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewAuditPropertyToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Code Template.
        /// </summary>
        internal static string ContextMenu_NewCodeTemplate {
            get {
                return ResourceManager.GetString("ContextMenu_NewCodeTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating a code template to specify how to generate code for a part of the model such as a project, entity, or method..
        /// </summary>
        internal static string ContextMenu_NewCodeTemplateToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewCodeTemplateToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Collection.
        /// </summary>
        internal static string ContextMenu_NewCollection {
            get {
                return ResourceManager.GetString("ContextMenu_NewCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating a collection of entities that is associated with this entity..
        /// </summary>
        internal static string ContextMenu_NewCollectionToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewCollectionToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Database Source.
        /// </summary>
        internal static string ContextMenu_NewDatabaseSource {
            get {
                return ResourceManager.GetString("ContextMenu_NewDatabaseSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating a database specification source that is used to provide entity relationship data for this model..
        /// </summary>
        internal static string ContextMenu_NewDatabaseSourceToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewDatabaseSourceToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Diagram.
        /// </summary>
        internal static string ContextMenu_NewDiagram {
            get {
                return ResourceManager.GetString("ContextMenu_NewDiagram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Diagram Entity.
        /// </summary>
        internal static string ContextMenu_NewDiagramEntity {
            get {
                return ResourceManager.GetString("ContextMenu_NewDiagramEntity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating a diagram based view for some entities in the solution, including editing capabilities..
        /// </summary>
        internal static string ContextMenu_NewDiagramEntityToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewDiagramEntityToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating a diagram based view for some entities in the solution, including editing capabilities..
        /// </summary>
        internal static string ContextMenu_NewDiagramToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewDiagramToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Entity.
        /// </summary>
        internal static string ContextMenu_NewEntity {
            get {
                return ResourceManager.GetString("ContextMenu_NewEntity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Entity Reference.
        /// </summary>
        internal static string ContextMenu_NewEntityReference {
            get {
                return ResourceManager.GetString("ContextMenu_NewEntityReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating a direct reference to another entity from this entity..
        /// </summary>
        internal static string ContextMenu_NewEntityReferenceToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewEntityReferenceToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating a platform/tier independent entity that is used to generate associated classes at each tier..
        /// </summary>
        internal static string ContextMenu_NewEntityToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewEntityToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Enumeration.
        /// </summary>
        internal static string ContextMenu_NewEnumeration {
            get {
                return ResourceManager.GetString("ContextMenu_NewEnumeration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating enumerations within a model..
        /// </summary>
        internal static string ContextMenu_NewEnumerationToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewEnumerationToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Feature.
        /// </summary>
        internal static string ContextMenu_NewFeature {
            get {
                return ResourceManager.GetString("ContextMenu_NewFeature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating a feature that is used to organize functionality (and entities) for each project..
        /// </summary>
        internal static string ContextMenu_NewFeatureToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewFeatureToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Index.
        /// </summary>
        internal static string ContextMenu_NewIndex {
            get {
                return ResourceManager.GetString("ContextMenu_NewIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Index Property.
        /// </summary>
        internal static string ContextMenu_NewIndexProperty {
            get {
                return ResourceManager.GetString("ContextMenu_NewIndexProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating an index property for the corresponding entity..
        /// </summary>
        internal static string ContextMenu_NewIndexPropertyToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewIndexPropertyToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating an index for the corresponding entity..
        /// </summary>
        internal static string ContextMenu_NewIndexToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewIndexToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Method.
        /// </summary>
        internal static string ContextMenu_NewMethod {
            get {
                return ResourceManager.GetString("ContextMenu_NewMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Method Relationship.
        /// </summary>
        internal static string ContextMenu_NewMethodRelationship {
            get {
                return ResourceManager.GetString("ContextMenu_NewMethodRelationship", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating relationships within a method..
        /// </summary>
        internal static string ContextMenu_NewMethodRelationshipToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewMethodRelationshipToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating a platform/tier independent method that is used to provide functions for entities..
        /// </summary>
        internal static string ContextMenu_NewMethodToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewMethodToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Model.
        /// </summary>
        internal static string ContextMenu_NewModel {
            get {
                return ResourceManager.GetString("ContextMenu_NewModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Model Object.
        /// </summary>
        internal static string ContextMenu_NewModelObject {
            get {
                return ResourceManager.GetString("ContextMenu_NewModelObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating model objects within a model..
        /// </summary>
        internal static string ContextMenu_NewModelObjectToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewModelObjectToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Model Property.
        /// </summary>
        internal static string ContextMenu_NewModelProperty {
            get {
                return ResourceManager.GetString("ContextMenu_NewModelProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating model properties within a model object..
        /// </summary>
        internal static string ContextMenu_NewModelPropertyToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewModelPropertyToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating models within a solution..
        /// </summary>
        internal static string ContextMenu_NewModelToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewModelToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Object Instance.
        /// </summary>
        internal static string ContextMenu_NewObjectInstance {
            get {
                return ResourceManager.GetString("ContextMenu_NewObjectInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating object instancess for a model object..
        /// </summary>
        internal static string ContextMenu_NewObjectInstanceToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewObjectInstanceToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Parameter.
        /// </summary>
        internal static string ContextMenu_NewParameter {
            get {
                return ResourceManager.GetString("ContextMenu_NewParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating a parameter for the corresponding method..
        /// </summary>
        internal static string ContextMenu_NewParameterToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewParameterToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Project.
        /// </summary>
        internal static string ContextMenu_NewProject {
            get {
                return ResourceManager.GetString("ContextMenu_NewProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating a new project that is used to generate code for an output project..
        /// </summary>
        internal static string ContextMenu_NewProjectToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewProjectToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Property.
        /// </summary>
        internal static string ContextMenu_NewProperty {
            get {
                return ResourceManager.GetString("ContextMenu_NewProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property.
        /// </summary>
        internal static string ContextMenu_NewPropertyBase {
            get {
                return ResourceManager.GetString("ContextMenu_NewPropertyBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating base properties within a solution..
        /// </summary>
        internal static string ContextMenu_NewPropertyBaseToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewPropertyBaseToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Property Instance.
        /// </summary>
        internal static string ContextMenu_NewPropertyInstance {
            get {
                return ResourceManager.GetString("ContextMenu_NewPropertyInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating property instancess for an object instance..
        /// </summary>
        internal static string ContextMenu_NewPropertyInstanceToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewPropertyInstanceToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Property Reference.
        /// </summary>
        internal static string ContextMenu_NewPropertyReference {
            get {
                return ResourceManager.GetString("ContextMenu_NewPropertyReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating a direct reference to another entity property from this entity..
        /// </summary>
        internal static string ContextMenu_NewPropertyReferenceToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewPropertyReferenceToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Property Relationship.
        /// </summary>
        internal static string ContextMenu_NewPropertyRelationship {
            get {
                return ResourceManager.GetString("ContextMenu_NewPropertyRelationship", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating relationships within a property..
        /// </summary>
        internal static string ContextMenu_NewPropertyRelationshipToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewPropertyRelationshipToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating a property for the corresponding entity..
        /// </summary>
        internal static string ContextMenu_NewPropertyToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewPropertyToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Relationship.
        /// </summary>
        internal static string ContextMenu_NewRelationship {
            get {
                return ResourceManager.GetString("ContextMenu_NewRelationship", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Relationship Property.
        /// </summary>
        internal static string ContextMenu_NewRelationshipProperty {
            get {
                return ResourceManager.GetString("ContextMenu_NewRelationshipProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating a relationship property for the corresponding entity..
        /// </summary>
        internal static string ContextMenu_NewRelationshipPropertyToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewRelationshipPropertyToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating a relationship for the corresponding entity..
        /// </summary>
        internal static string ContextMenu_NewRelationshipToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewRelationshipToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Solution.
        /// </summary>
        internal static string ContextMenu_NewSolution {
            get {
                return ResourceManager.GetString("ContextMenu_NewSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating a new xml file that corresponds to an M+ model.  This M+ solution model is used to generate code for an output solution..
        /// </summary>
        internal static string ContextMenu_NewSolutionToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewSolutionToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Specification Source.
        /// </summary>
        internal static string ContextMenu_NewSpecificationSource {
            get {
                return ResourceManager.GetString("ContextMenu_NewSpecificationSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating specification sources within a solution..
        /// </summary>
        internal static string ContextMenu_NewSpecificationSourceToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewSpecificationSourceToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Spec Template.
        /// </summary>
        internal static string ContextMenu_NewSpecTemplate {
            get {
                return ResourceManager.GetString("ContextMenu_NewSpecTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating a spec template to specify how to generate code for a part of the model such as a project, entity, or method..
        /// </summary>
        internal static string ContextMenu_NewSpecTemplateToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewSpecTemplateToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Stage.
        /// </summary>
        internal static string ContextMenu_NewStage {
            get {
                return ResourceManager.GetString("ContextMenu_NewStage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating stages within a workflow..
        /// </summary>
        internal static string ContextMenu_NewStageToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewStageToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Stage Transition.
        /// </summary>
        internal static string ContextMenu_NewStageTransition {
            get {
                return ResourceManager.GetString("ContextMenu_NewStageTransition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating stage transitions within a workflow..
        /// </summary>
        internal static string ContextMenu_NewStageTransitionToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewStageTransitionToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New State.
        /// </summary>
        internal static string ContextMenu_NewState {
            get {
                return ResourceManager.GetString("ContextMenu_NewState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New State Model.
        /// </summary>
        internal static string ContextMenu_NewStateModel {
            get {
                return ResourceManager.GetString("ContextMenu_NewStateModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating state models within an entity..
        /// </summary>
        internal static string ContextMenu_NewStateModelToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewStateModelToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating states within an entity..
        /// </summary>
        internal static string ContextMenu_NewStateToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewStateToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New State Transition.
        /// </summary>
        internal static string ContextMenu_NewStateTransition {
            get {
                return ResourceManager.GetString("ContextMenu_NewStateTransition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating state transitions within an entity..
        /// </summary>
        internal static string ContextMenu_NewStateTransitionToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewStateTransitionToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Step.
        /// </summary>
        internal static string ContextMenu_NewStep {
            get {
                return ResourceManager.GetString("ContextMenu_NewStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating steps within a stage..
        /// </summary>
        internal static string ContextMenu_NewStepToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewStepToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Step Transition.
        /// </summary>
        internal static string ContextMenu_NewStepTransition {
            get {
                return ResourceManager.GetString("ContextMenu_NewStepTransition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating step transitions within a stage..
        /// </summary>
        internal static string ContextMenu_NewStepTransitionToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewStepTransitionToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Tag.
        /// </summary>
        internal static string ContextMenu_NewTag {
            get {
                return ResourceManager.GetString("ContextMenu_NewTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating a tag to apply a piece of information to a model item..
        /// </summary>
        internal static string ContextMenu_NewTagToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewTagToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Value.
        /// </summary>
        internal static string ContextMenu_NewValue {
            get {
                return ResourceManager.GetString("ContextMenu_NewValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating values within an enumeration..
        /// </summary>
        internal static string ContextMenu_NewValueToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewValueToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New View.
        /// </summary>
        internal static string ContextMenu_NewView {
            get {
                return ResourceManager.GetString("ContextMenu_NewView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New View Property.
        /// </summary>
        internal static string ContextMenu_NewViewProperty {
            get {
                return ResourceManager.GetString("ContextMenu_NewViewProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating properties for a view..
        /// </summary>
        internal static string ContextMenu_NewViewPropertyToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewViewPropertyToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating views for a feature..
        /// </summary>
        internal static string ContextMenu_NewViewToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewViewToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Workflow.
        /// </summary>
        internal static string ContextMenu_NewWorkflow {
            get {
                return ResourceManager.GetString("ContextMenu_NewWorkflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating high level workflows corresponding to business process, etc..
        /// </summary>
        internal static string ContextMenu_NewWorkflowToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewWorkflowToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New XML Source.
        /// </summary>
        internal static string ContextMenu_NewXmlSource {
            get {
                return ResourceManager.GetString("ContextMenu_NewXmlSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating an xml specification source that is used to provide entity relationship data for this model..
        /// </summary>
        internal static string ContextMenu_NewXmlSourceToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NewXmlSourceToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Next.
        /// </summary>
        internal static string ContextMenu_NextTab {
            get {
                return ResourceManager.GetString("ContextMenu_NextTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go to the next tab..
        /// </summary>
        internal static string ContextMenu_NextTabToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_NextTabToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Output Solution.
        /// </summary>
        internal static string ContextMenu_OpenOutputSolution {
            get {
                return ResourceManager.GetString("ContextMenu_OpenOutputSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For opening the output solution associated with this M+ solution..
        /// </summary>
        internal static string ContextMenu_OpenOutputSolutionToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_OpenOutputSolutionToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Solution.
        /// </summary>
        internal static string ContextMenu_OpenSolution {
            get {
                return ResourceManager.GetString("ContextMenu_OpenSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For opening an M+ solution file..
        /// </summary>
        internal static string ContextMenu_OpenSolutionToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_OpenSolutionToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recent Solutions.
        /// </summary>
        internal static string ContextMenu_RecentSolutions {
            get {
                return ResourceManager.GetString("ContextMenu_RecentSolutions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For opening recently opened M+ solution files..
        /// </summary>
        internal static string ContextMenu_RecentSolutionsToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_RecentSolutionsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove from Diagram.
        /// </summary>
        internal static string ContextMenu_RemoveFromDiagram {
            get {
                return ResourceManager.GetString("ContextMenu_RemoveFromDiagram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        internal static string ContextMenu_Save {
            get {
                return ResourceManager.GetString("ContextMenu_Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save All.
        /// </summary>
        internal static string ContextMenu_SaveAll {
            get {
                return ResourceManager.GetString("ContextMenu_SaveAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For saving all open M+solutions..
        /// </summary>
        internal static string ContextMenu_SaveAllToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_SaveAllToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save As.
        /// </summary>
        internal static string ContextMenu_SaveAs {
            get {
                return ResourceManager.GetString("ContextMenu_SaveAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For saving the M+solution as another specified xml file..
        /// </summary>
        internal static string ContextMenu_SaveAsToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_SaveAsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For saving the M+ solution as an xml file..
        /// </summary>
        internal static string ContextMenu_SaveToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_SaveToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Output Solution.
        /// </summary>
        internal static string ContextMenu_UpdateOutputSolution {
            get {
                return ResourceManager.GetString("ContextMenu_UpdateOutputSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For updating the source code for the corresponding output solution based on this M+ solution model..
        /// </summary>
        internal static string ContextMenu_UpdateOutputSolutionToolTip {
            get {
                return ResourceManager.GetString("ContextMenu_UpdateOutputSolutionToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CreateCode {
            get {
                object obj = ResourceManager.GetObject("CreateCode", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CreateModel {
            get {
                object obj = ResourceManager.GetObject("CreateModel", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audit Property.
        /// </summary>
        internal static string Edit_AuditPropertyHeader {
            get {
                return ResourceManager.GetString("Edit_AuditPropertyHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property Name.
        /// </summary>
        internal static string Edit_AuditPropertyNameProperty {
            get {
                return ResourceManager.GetString("Edit_AuditPropertyNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base Entity ID.
        /// </summary>
        internal static string Edit_BaseEntityIDProperty {
            get {
                return ResourceManager.GetString("Edit_BaseEntityIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base Entity.
        /// </summary>
        internal static string Edit_BaseEntityIDSelection {
            get {
                return ResourceManager.GetString("Edit_BaseEntityIDSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Category.
        /// </summary>
        internal static string Edit_CategoryNameProperty {
            get {
                return ResourceManager.GetString("Edit_CategoryNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Closed Image.
        /// </summary>
        internal static string Edit_ClosedImagePathProperty {
            get {
                return ResourceManager.GetString("Edit_ClosedImagePathProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code Template.
        /// </summary>
        internal static string Edit_CodeTemplateHeader {
            get {
                return ResourceManager.GetString("Edit_CodeTemplateHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity.
        /// </summary>
        internal static string Edit_CollectionEntityIDProperty {
            get {
                return ResourceManager.GetString("Edit_CollectionEntityIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection.
        /// </summary>
        internal static string Edit_CollectionHeader {
            get {
                return ResourceManager.GetString("Edit_CollectionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection Name.
        /// </summary>
        internal static string Edit_CollectionNameProperty {
            get {
                return ResourceManager.GetString("Edit_CollectionNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection Name.
        /// </summary>
        internal static string Edit_CollectionProperty {
            get {
                return ResourceManager.GetString("Edit_CollectionProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Company Name.
        /// </summary>
        internal static string Edit_CompanyNameProperty {
            get {
                return ResourceManager.GetString("Edit_CompanyNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration.
        /// </summary>
        internal static string Edit_Configuration {
            get {
                return ResourceManager.GetString("Edit_Configuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright.
        /// </summary>
        internal static string Edit_CopyrightProperty {
            get {
                return ResourceManager.GetString("Edit_CopyrightProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Count.
        /// </summary>
        internal static string Edit_CountProperty {
            get {
                return ResourceManager.GetString("Edit_CountProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database Source.
        /// </summary>
        internal static string Edit_DatabaseSourceHeader {
            get {
                return ResourceManager.GetString("Edit_DatabaseSourceHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database Type.
        /// </summary>
        internal static string Edit_DatabaseTypeCodeSelection {
            get {
                return ResourceManager.GetString("Edit_DatabaseTypeCodeSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data Type Code.
        /// </summary>
        internal static string Edit_DataTypeCodeProperty {
            get {
                return ResourceManager.GetString("Edit_DataTypeCodeProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data Type.
        /// </summary>
        internal static string Edit_DataTypeCodeSelection {
            get {
                return ResourceManager.GetString("Edit_DataTypeCodeSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database.
        /// </summary>
        internal static string Edit_DbNameProperty {
            get {
                return ResourceManager.GetString("Edit_DbNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database Server.
        /// </summary>
        internal static string Edit_DbServerNameProperty {
            get {
                return ResourceManager.GetString("Edit_DbServerNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression.
        /// </summary>
        internal static string Edit_DebugExpressionHeader {
            get {
                return ResourceManager.GetString("Edit_DebugExpressionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug.
        /// </summary>
        internal static string Edit_DebugHeader {
            get {
                return ResourceManager.GetString("Edit_DebugHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        internal static string Edit_DebugValueHeader {
            get {
                return ResourceManager.GetString("Edit_DebugValueHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defined By Enumeration.
        /// </summary>
        internal static string Edit_DefinedByEnumerationHeader {
            get {
                return ResourceManager.GetString("Edit_DefinedByEnumerationHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defined By Enumeration ID.
        /// </summary>
        internal static string Edit_DefinedByEnumerationIDProperty {
            get {
                return ResourceManager.GetString("Edit_DefinedByEnumerationIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defined By Enumeration.
        /// </summary>
        internal static string Edit_DefinedByEnumerationIDSelection {
            get {
                return ResourceManager.GetString("Edit_DefinedByEnumerationIDSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defined By Model Object.
        /// </summary>
        internal static string Edit_DefinedByModelObjectHeader {
            get {
                return ResourceManager.GetString("Edit_DefinedByModelObjectHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defined By Model Object ID.
        /// </summary>
        internal static string Edit_DefinedByModelObjectIDProperty {
            get {
                return ResourceManager.GetString("Edit_DefinedByModelObjectIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defined By Model Object.
        /// </summary>
        internal static string Edit_DefinedByModelObjectIDSelection {
            get {
                return ResourceManager.GetString("Edit_DefinedByModelObjectIDSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defined By Value.
        /// </summary>
        internal static string Edit_DefinedByValueHeader {
            get {
                return ResourceManager.GetString("Edit_DefinedByValueHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defined By Value.
        /// </summary>
        internal static string Edit_DefinedByValueIDSelection {
            get {
                return ResourceManager.GetString("Edit_DefinedByValueIDSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        internal static string Edit_DescriptionProperty {
            get {
                return ResourceManager.GetString("Edit_DescriptionProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diagram Entity.
        /// </summary>
        internal static string Edit_DiagramEntityHeader {
            get {
                return ResourceManager.GetString("Edit_DiagramEntityHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diagram Entity ID.
        /// </summary>
        internal static string Edit_DiagramEntityIDProperty {
            get {
                return ResourceManager.GetString("Edit_DiagramEntityIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diagram Entity Name.
        /// </summary>
        internal static string Edit_DiagramEntityNameProperty {
            get {
                return ResourceManager.GetString("Edit_DiagramEntityNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diagram.
        /// </summary>
        internal static string Edit_DiagramHeader {
            get {
                return ResourceManager.GetString("Edit_DiagramHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diagram ID.
        /// </summary>
        internal static string Edit_DiagramIDProperty {
            get {
                return ResourceManager.GetString("Edit_DiagramIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diagram Name.
        /// </summary>
        internal static string Edit_DiagramNameProperty {
            get {
                return ResourceManager.GetString("Edit_DiagramNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity.
        /// </summary>
        internal static string Edit_EntityHeader {
            get {
                return ResourceManager.GetString("Edit_EntityHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity ID.
        /// </summary>
        internal static string Edit_EntityIDProperty {
            get {
                return ResourceManager.GetString("Edit_EntityIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity.
        /// </summary>
        internal static string Edit_EntityIDSelection {
            get {
                return ResourceManager.GetString("Edit_EntityIDSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity Name.
        /// </summary>
        internal static string Edit_EntityNameProperty {
            get {
                return ResourceManager.GetString("Edit_EntityNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity Reference.
        /// </summary>
        internal static string Edit_EntityReferenceHeader {
            get {
                return ResourceManager.GetString("Edit_EntityReferenceHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity Reference Name.
        /// </summary>
        internal static string Edit_EntityReferenceNameProperty {
            get {
                return ResourceManager.GetString("Edit_EntityReferenceNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity Type Code.
        /// </summary>
        internal static string Edit_EntityTypeCodeProperty {
            get {
                return ResourceManager.GetString("Edit_EntityTypeCodeProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity Type.
        /// </summary>
        internal static string Edit_EntityTypeCodeSelection {
            get {
                return ResourceManager.GetString("Edit_EntityTypeCodeSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enumeration.
        /// </summary>
        internal static string Edit_EnumerationHeader {
            get {
                return ResourceManager.GetString("Edit_EnumerationHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enumeration ID.
        /// </summary>
        internal static string Edit_EnumerationIDProperty {
            get {
                return ResourceManager.GetString("Edit_EnumerationIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enumeration Name.
        /// </summary>
        internal static string Edit_EnumerationNameProperty {
            get {
                return ResourceManager.GetString("Edit_EnumerationNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enum Value.
        /// </summary>
        internal static string Edit_EnumValueHeader {
            get {
                return ResourceManager.GetString("Edit_EnumValueHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enum Value.
        /// </summary>
        internal static string Edit_EnumValueProperty {
            get {
                return ResourceManager.GetString("Edit_EnumValueProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature.
        /// </summary>
        internal static string Edit_FeatureHeader {
            get {
                return ResourceManager.GetString("Edit_FeatureHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature ID.
        /// </summary>
        internal static string Edit_FeatureIDProperty {
            get {
                return ResourceManager.GetString("Edit_FeatureIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature.
        /// </summary>
        internal static string Edit_FeatureIDSelection {
            get {
                return ResourceManager.GetString("Edit_FeatureIDSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature Name.
        /// </summary>
        internal static string Edit_FeatureNameProperty {
            get {
                return ResourceManager.GetString("Edit_FeatureNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Path.
        /// </summary>
        internal static string Edit_FilePathProperty {
            get {
                return ResourceManager.GetString("Edit_FilePathProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter.
        /// </summary>
        internal static string Edit_FilterProperty {
            get {
                return ResourceManager.GetString("Edit_FilterProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to From Stage.
        /// </summary>
        internal static string Edit_FromStageHeader {
            get {
                return ResourceManager.GetString("Edit_FromStageHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to From Stage ID.
        /// </summary>
        internal static string Edit_FromStageIDProperty {
            get {
                return ResourceManager.GetString("Edit_FromStageIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to From Stage.
        /// </summary>
        internal static string Edit_FromStageIDSelection {
            get {
                return ResourceManager.GetString("Edit_FromStageIDSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to From State.
        /// </summary>
        internal static string Edit_FromStateHeader {
            get {
                return ResourceManager.GetString("Edit_FromStateHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to From State ID.
        /// </summary>
        internal static string Edit_FromStateIDProperty {
            get {
                return ResourceManager.GetString("Edit_FromStateIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to From State.
        /// </summary>
        internal static string Edit_FromStateIDSelection {
            get {
                return ResourceManager.GetString("Edit_FromStateIDSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to From Step.
        /// </summary>
        internal static string Edit_FromStepHeader {
            get {
                return ResourceManager.GetString("Edit_FromStepHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to From Step ID.
        /// </summary>
        internal static string Edit_FromStepIDProperty {
            get {
                return ResourceManager.GetString("Edit_FromStepIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to From Step.
        /// </summary>
        internal static string Edit_FromStepIDSelection {
            get {
                return ResourceManager.GetString("Edit_FromStepIDSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group Name.
        /// </summary>
        internal static string Edit_GroupNameProperty {
            get {
                return ResourceManager.GetString("Edit_GroupNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Has Errors.
        /// </summary>
        internal static string Edit_HasErrorsProperty {
            get {
                return ResourceManager.GetString("Edit_HasErrorsProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifier Type Code.
        /// </summary>
        internal static string Edit_IdentifierTypeCodeProperty {
            get {
                return ResourceManager.GetString("Edit_IdentifierTypeCodeProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifier Type.
        /// </summary>
        internal static string Edit_IdentifierTypeCodeSelection {
            get {
                return ResourceManager.GetString("Edit_IdentifierTypeCodeSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identity Increment.
        /// </summary>
        internal static string Edit_IdentityIncrementProperty {
            get {
                return ResourceManager.GetString("Edit_IdentityIncrementProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identity.
        /// </summary>
        internal static string Edit_IdentityProperty {
            get {
                return ResourceManager.GetString("Edit_IdentityProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identity Seed.
        /// </summary>
        internal static string Edit_IdentitySeedProperty {
            get {
                return ResourceManager.GetString("Edit_IdentitySeedProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index.
        /// </summary>
        internal static string Edit_IndexHeader {
            get {
                return ResourceManager.GetString("Edit_IndexHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index ID.
        /// </summary>
        internal static string Edit_IndexIDProperty {
            get {
                return ResourceManager.GetString("Edit_IndexIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index Name.
        /// </summary>
        internal static string Edit_IndexNameHeader {
            get {
                return ResourceManager.GetString("Edit_IndexNameHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index Name.
        /// </summary>
        internal static string Edit_IndexNameProperty {
            get {
                return ResourceManager.GetString("Edit_IndexNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index Property.
        /// </summary>
        internal static string Edit_IndexPropertyHeader {
            get {
                return ResourceManager.GetString("Edit_IndexPropertyHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index Property ID.
        /// </summary>
        internal static string Edit_IndexPropertyIDProperty {
            get {
                return ResourceManager.GetString("Edit_IndexPropertyIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties.
        /// </summary>
        internal static string Edit_IndexPropertyListProperty {
            get {
                return ResourceManager.GetString("Edit_IndexPropertyListProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property Name.
        /// </summary>
        internal static string Edit_IndexPropertyNameHeader {
            get {
                return ResourceManager.GetString("Edit_IndexPropertyNameHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initial Value.
        /// </summary>
        internal static string Edit_InitialValueProperty {
            get {
                return ResourceManager.GetString("Edit_InitialValueProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audits On Add.
        /// </summary>
        internal static string Edit_IsAddAuditPropertyProperty {
            get {
                return ResourceManager.GetString("Edit_IsAddAuditPropertyProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is Ascending Sort.
        /// </summary>
        internal static string Edit_IsAscendingSortProperty {
            get {
                return ResourceManager.GetString("Edit_IsAscendingSortProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is Auto Updated.
        /// </summary>
        internal static string Edit_IsAutoUpdatedProperty {
            get {
                return ResourceManager.GetString("Edit_IsAutoUpdatedProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection.
        /// </summary>
        internal static string Edit_IsCollectionProperty {
            get {
                return ResourceManager.GetString("Edit_IsCollectionProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display Property.
        /// </summary>
        internal static string Edit_IsDisplayPropertyProperty {
            get {
                return ResourceManager.GetString("Edit_IsDisplayPropertyProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Foreign Key.
        /// </summary>
        internal static string Edit_IsForeignKeyMemberProperty {
            get {
                return ResourceManager.GetString("Edit_IsForeignKeyMemberProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nullable.
        /// </summary>
        internal static string Edit_IsNullableProperty {
            get {
                return ResourceManager.GetString("Edit_IsNullableProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Primary Key.
        /// </summary>
        internal static string Edit_IsPrimaryKeyIndexProperty {
            get {
                return ResourceManager.GetString("Edit_IsPrimaryKeyIndexProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Primary Key.
        /// </summary>
        internal static string Edit_IsPrimaryKeyMemberProperty {
            get {
                return ResourceManager.GetString("Edit_IsPrimaryKeyMemberProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template Utilized.
        /// </summary>
        internal static string Edit_IsTemplateUtilizedProperty {
            get {
                return ResourceManager.GetString("Edit_IsTemplateUtilizedProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Top Level Template.
        /// </summary>
        internal static string Edit_IsTopLevelTemplateProperty {
            get {
                return ResourceManager.GetString("Edit_IsTopLevelTemplateProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unique.
        /// </summary>
        internal static string Edit_IsUniqueIndexProperty {
            get {
                return ResourceManager.GetString("Edit_IsUniqueIndexProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audits On Update.
        /// </summary>
        internal static string Edit_IsUpdateAuditPropertyProperty {
            get {
                return ResourceManager.GetString("Edit_IsUpdateAuditPropertyProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value Is Generated.
        /// </summary>
        internal static string Edit_IsValueGeneratedProperty {
            get {
                return ResourceManager.GetString("Edit_IsValueGeneratedProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Items Max.
        /// </summary>
        internal static string Edit_ItemsMaxProperty {
            get {
                return ResourceManager.GetString("Edit_ItemsMaxProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Items Min.
        /// </summary>
        internal static string Edit_ItemsMinProperty {
            get {
                return ResourceManager.GetString("Edit_ItemsMinProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to :.
        /// </summary>
        internal static string Edit_LabelColon {
            get {
                return ResourceManager.GetString("Edit_LabelColon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Length.
        /// </summary>
        internal static string Edit_LengthProperty {
            get {
                return ResourceManager.GetString("Edit_LengthProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method.
        /// </summary>
        internal static string Edit_MethodHeader {
            get {
                return ResourceManager.GetString("Edit_MethodHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method ID.
        /// </summary>
        internal static string Edit_MethodIDProperty {
            get {
                return ResourceManager.GetString("Edit_MethodIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method Name.
        /// </summary>
        internal static string Edit_MethodNameProperty {
            get {
                return ResourceManager.GetString("Edit_MethodNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method Relationship.
        /// </summary>
        internal static string Edit_MethodRelationshipHeader {
            get {
                return ResourceManager.GetString("Edit_MethodRelationshipHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method Relationship ID.
        /// </summary>
        internal static string Edit_MethodRelationshipIDProperty {
            get {
                return ResourceManager.GetString("Edit_MethodRelationshipIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Relationships.
        /// </summary>
        internal static string Edit_MethodRelationshipListProperty {
            get {
                return ResourceManager.GetString("Edit_MethodRelationshipListProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method Relationships.
        /// </summary>
        internal static string Edit_MethodRelationshipsHeader {
            get {
                return ResourceManager.GetString("Edit_MethodRelationshipsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method Type Code.
        /// </summary>
        internal static string Edit_MethodTypeCodeProperty {
            get {
                return ResourceManager.GetString("Edit_MethodTypeCodeProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method Type.
        /// </summary>
        internal static string Edit_MethodTypeCodeSelection {
            get {
                return ResourceManager.GetString("Edit_MethodTypeCodeSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Length.
        /// </summary>
        internal static string Edit_MinLengthProperty {
            get {
                return ResourceManager.GetString("Edit_MinLengthProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model.
        /// </summary>
        internal static string Edit_ModelHeader {
            get {
                return ResourceManager.GetString("Edit_ModelHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model ID.
        /// </summary>
        internal static string Edit_ModelIDProperty {
            get {
                return ResourceManager.GetString("Edit_ModelIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model Name.
        /// </summary>
        internal static string Edit_ModelNameProperty {
            get {
                return ResourceManager.GetString("Edit_ModelNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model Object.
        /// </summary>
        internal static string Edit_ModelObjectHeader {
            get {
                return ResourceManager.GetString("Edit_ModelObjectHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model Object ID.
        /// </summary>
        internal static string Edit_ModelObjectIDProperty {
            get {
                return ResourceManager.GetString("Edit_ModelObjectIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model Object Name.
        /// </summary>
        internal static string Edit_ModelObjectNameProperty {
            get {
                return ResourceManager.GetString("Edit_ModelObjectNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model Properties.
        /// </summary>
        internal static string Edit_ModelPropertiesHeader {
            get {
                return ResourceManager.GetString("Edit_ModelPropertiesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model Property.
        /// </summary>
        internal static string Edit_ModelPropertyHeader {
            get {
                return ResourceManager.GetString("Edit_ModelPropertyHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model Property.
        /// </summary>
        internal static string Edit_ModelPropertyIDHeader {
            get {
                return ResourceManager.GetString("Edit_ModelPropertyIDHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model Property ID.
        /// </summary>
        internal static string Edit_ModelPropertyIDProperty {
            get {
                return ResourceManager.GetString("Edit_ModelPropertyIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model Property.
        /// </summary>
        internal static string Edit_ModelPropertyIDSelection {
            get {
                return ResourceManager.GetString("Edit_ModelPropertyIDSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties.
        /// </summary>
        internal static string Edit_ModelPropertyListProperty {
            get {
                return ResourceManager.GetString("Edit_ModelPropertyListProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model Property Name.
        /// </summary>
        internal static string Edit_ModelPropertyNameHeader {
            get {
                return ResourceManager.GetString("Edit_ModelPropertyNameHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model Property Name.
        /// </summary>
        internal static string Edit_ModelPropertyNameProperty {
            get {
                return ResourceManager.GetString("Edit_ModelPropertyNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Namespace.
        /// </summary>
        internal static string Edit_NamespaceProperty {
            get {
                return ResourceManager.GetString("Edit_NamespaceProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element.
        /// </summary>
        internal static string Edit_NodeNameProperty {
            get {
                return ResourceManager.GetString("Edit_NodeNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object Instance.
        /// </summary>
        internal static string Edit_ObjectInstanceHeader {
            get {
                return ResourceManager.GetString("Edit_ObjectInstanceHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object Instance ID.
        /// </summary>
        internal static string Edit_ObjectInstanceIDProperty {
            get {
                return ResourceManager.GetString("Edit_ObjectInstanceIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Image.
        /// </summary>
        internal static string Edit_OpenImagePathProperty {
            get {
                return ResourceManager.GetString("Edit_OpenImagePathProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Order.
        /// </summary>
        internal static string Edit_OrderHeader {
            get {
                return ResourceManager.GetString("Edit_OrderHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Order.
        /// </summary>
        internal static string Edit_OrderProperty {
            get {
                return ResourceManager.GetString("Edit_OrderProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output Solution File Name.
        /// </summary>
        internal static string Edit_OutputSolutionFileNameProperty {
            get {
                return ResourceManager.GetString("Edit_OutputSolutionFileNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter.
        /// </summary>
        internal static string Edit_ParameterHeader {
            get {
                return ResourceManager.GetString("Edit_ParameterHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter ID.
        /// </summary>
        internal static string Edit_ParameterIDProperty {
            get {
                return ResourceManager.GetString("Edit_ParameterIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameters.
        /// </summary>
        internal static string Edit_ParameterListProperty {
            get {
                return ResourceManager.GetString("Edit_ParameterListProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter Name.
        /// </summary>
        internal static string Edit_ParameterNameProperty {
            get {
                return ResourceManager.GetString("Edit_ParameterNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameters.
        /// </summary>
        internal static string Edit_ParametersHeader {
            get {
                return ResourceManager.GetString("Edit_ParametersHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parent Model Object.
        /// </summary>
        internal static string Edit_ParentModelObjectIDSelection {
            get {
                return ResourceManager.GetString("Edit_ParentModelObjectIDSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parent Object Instance.
        /// </summary>
        internal static string Edit_ParentObjectInstanceIDSelection {
            get {
                return ResourceManager.GetString("Edit_ParentObjectInstanceIDSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        internal static string Edit_PasswordProperty {
            get {
                return ResourceManager.GetString("Edit_PasswordProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Platform.
        /// </summary>
        internal static string Edit_PlatformCodeProperty {
            get {
                return ResourceManager.GetString("Edit_PlatformCodeProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Position X.
        /// </summary>
        internal static string Edit_PositionXProperty {
            get {
                return ResourceManager.GetString("Edit_PositionXProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Position Y.
        /// </summary>
        internal static string Edit_PositionYProperty {
            get {
                return ResourceManager.GetString("Edit_PositionYProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Precision.
        /// </summary>
        internal static string Edit_PrecisionProperty {
            get {
                return ResourceManager.GetString("Edit_PrecisionProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product Name.
        /// </summary>
        internal static string Edit_ProductNameProperty {
            get {
                return ResourceManager.GetString("Edit_ProductNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product Version.
        /// </summary>
        internal static string Edit_ProductVersionProperty {
            get {
                return ResourceManager.GetString("Edit_ProductVersionProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project.
        /// </summary>
        internal static string Edit_ProjectHeader {
            get {
                return ResourceManager.GetString("Edit_ProjectHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project ID.
        /// </summary>
        internal static string Edit_ProjectIDProperty {
            get {
                return ResourceManager.GetString("Edit_ProjectIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project Name.
        /// </summary>
        internal static string Edit_ProjectNameProperty {
            get {
                return ResourceManager.GetString("Edit_ProjectNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project References.
        /// </summary>
        internal static string Edit_ProjectReferenceListProperty {
            get {
                return ResourceManager.GetString("Edit_ProjectReferenceListProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties.
        /// </summary>
        internal static string Edit_PropertiesHeader {
            get {
                return ResourceManager.GetString("Edit_PropertiesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property.
        /// </summary>
        internal static string Edit_PropertyBaseHeader {
            get {
                return ResourceManager.GetString("Edit_PropertyBaseHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property.
        /// </summary>
        internal static string Edit_PropertyHeader {
            get {
                return ResourceManager.GetString("Edit_PropertyHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property ID.
        /// </summary>
        internal static string Edit_PropertyIDProperty {
            get {
                return ResourceManager.GetString("Edit_PropertyIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property.
        /// </summary>
        internal static string Edit_PropertyIDSelection {
            get {
                return ResourceManager.GetString("Edit_PropertyIDSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property Instance.
        /// </summary>
        internal static string Edit_PropertyInstanceHeader {
            get {
                return ResourceManager.GetString("Edit_PropertyInstanceHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property Instance ID.
        /// </summary>
        internal static string Edit_PropertyInstanceIDProperty {
            get {
                return ResourceManager.GetString("Edit_PropertyInstanceIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties.
        /// </summary>
        internal static string Edit_PropertyInstanceListProperty {
            get {
                return ResourceManager.GetString("Edit_PropertyInstanceListProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties.
        /// </summary>
        internal static string Edit_PropertyInstancesHeader {
            get {
                return ResourceManager.GetString("Edit_PropertyInstancesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property Name.
        /// </summary>
        internal static string Edit_PropertyNameProperty {
            get {
                return ResourceManager.GetString("Edit_PropertyNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property Reference.
        /// </summary>
        internal static string Edit_PropertyReferenceHeader {
            get {
                return ResourceManager.GetString("Edit_PropertyReferenceHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference.
        /// </summary>
        internal static string Edit_PropertyReferenceNameProperty {
            get {
                return ResourceManager.GetString("Edit_PropertyReferenceNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property Relationship.
        /// </summary>
        internal static string Edit_PropertyRelationshipHeader {
            get {
                return ResourceManager.GetString("Edit_PropertyRelationshipHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property Relationship ID.
        /// </summary>
        internal static string Edit_PropertyRelationshipIDProperty {
            get {
                return ResourceManager.GetString("Edit_PropertyRelationshipIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Relationships.
        /// </summary>
        internal static string Edit_PropertyRelationshipListProperty {
            get {
                return ResourceManager.GetString("Edit_PropertyRelationshipListProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property Relationships.
        /// </summary>
        internal static string Edit_PropertyRelationshipsHeader {
            get {
                return ResourceManager.GetString("Edit_PropertyRelationshipsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property Value.
        /// </summary>
        internal static string Edit_PropertyValueHeader {
            get {
                return ResourceManager.GetString("Edit_PropertyValueHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property Value.
        /// </summary>
        internal static string Edit_PropertyValueProperty {
            get {
                return ResourceManager.GetString("Edit_PropertyValueProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Referenced Entity ID.
        /// </summary>
        internal static string Edit_ReferencedEntityIDProperty {
            get {
                return ResourceManager.GetString("Edit_ReferencedEntityIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Referenced Entity.
        /// </summary>
        internal static string Edit_ReferencedEntityIDSelection {
            get {
                return ResourceManager.GetString("Edit_ReferencedEntityIDSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Referenced Entity.
        /// </summary>
        internal static string Edit_ReferencedEntityProperty {
            get {
                return ResourceManager.GetString("Edit_ReferencedEntityProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Referenced Items Max.
        /// </summary>
        internal static string Edit_ReferencedItemsMaxProperty {
            get {
                return ResourceManager.GetString("Edit_ReferencedItemsMaxProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Referenced Items Min.
        /// </summary>
        internal static string Edit_ReferencedItemsMinProperty {
            get {
                return ResourceManager.GetString("Edit_ReferencedItemsMinProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Referenced Property.
        /// </summary>
        internal static string Edit_ReferencedPropertyHeader {
            get {
                return ResourceManager.GetString("Edit_ReferencedPropertyHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Referenced Property ID.
        /// </summary>
        internal static string Edit_ReferencedPropertyIDProperty {
            get {
                return ResourceManager.GetString("Edit_ReferencedPropertyIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Referenced Property.
        /// </summary>
        internal static string Edit_ReferencedPropertyIDSelection {
            get {
                return ResourceManager.GetString("Edit_ReferencedPropertyIDSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Relationship.
        /// </summary>
        internal static string Edit_RelationshipHeader {
            get {
                return ResourceManager.GetString("Edit_RelationshipHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Relationship ID.
        /// </summary>
        internal static string Edit_RelationshipIDProperty {
            get {
                return ResourceManager.GetString("Edit_RelationshipIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Relationship.
        /// </summary>
        internal static string Edit_RelationshipIDSelection {
            get {
                return ResourceManager.GetString("Edit_RelationshipIDSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Relationship Name.
        /// </summary>
        internal static string Edit_RelationshipNameProperty {
            get {
                return ResourceManager.GetString("Edit_RelationshipNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Relationship Property.
        /// </summary>
        internal static string Edit_RelationshipPropertyHeader {
            get {
                return ResourceManager.GetString("Edit_RelationshipPropertyHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Relationship Property ID.
        /// </summary>
        internal static string Edit_RelationshipPropertyIDProperty {
            get {
                return ResourceManager.GetString("Edit_RelationshipPropertyIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties.
        /// </summary>
        internal static string Edit_RelationshipPropertyListProperty {
            get {
                return ResourceManager.GetString("Edit_RelationshipPropertyListProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property Name.
        /// </summary>
        internal static string Edit_RelationshipPropertyNameHeader {
            get {
                return ResourceManager.GetString("Edit_RelationshipPropertyNameHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scale.
        /// </summary>
        internal static string Edit_ScaleProperty {
            get {
                return ResourceManager.GetString("Edit_ScaleProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Collection Arcs.
        /// </summary>
        internal static string Edit_ShowCollectionArcsProperty {
            get {
                return ResourceManager.GetString("Edit_ShowCollectionArcsProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Entity Reference Arcs.
        /// </summary>
        internal static string Edit_ShowEntityReferenceArcsProperty {
            get {
                return ResourceManager.GetString("Edit_ShowEntityReferenceArcsProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Property Arcs.
        /// </summary>
        internal static string Edit_ShowPropertyArcsProperty {
            get {
                return ResourceManager.GetString("Edit_ShowPropertyArcsProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Property Reference Arcs.
        /// </summary>
        internal static string Edit_ShowPropertyReferenceArcsProperty {
            get {
                return ResourceManager.GetString("Edit_ShowPropertyReferenceArcsProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solution.
        /// </summary>
        internal static string Edit_SolutionHeader {
            get {
                return ResourceManager.GetString("Edit_SolutionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solution ID.
        /// </summary>
        internal static string Edit_SolutionIDProperty {
            get {
                return ResourceManager.GetString("Edit_SolutionIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solution Name.
        /// </summary>
        internal static string Edit_SolutionNameProperty {
            get {
                return ResourceManager.GetString("Edit_SolutionNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort Order.
        /// </summary>
        internal static string Edit_SortOrderProperty {
            get {
                return ResourceManager.GetString("Edit_SortOrderProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database.
        /// </summary>
        internal static string Edit_SourceDbNameProperty {
            get {
                return ResourceManager.GetString("Edit_SourceDbNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database Server.
        /// </summary>
        internal static string Edit_SourceDbServerNameProperty {
            get {
                return ResourceManager.GetString("Edit_SourceDbServerNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XMLFile Name.
        /// </summary>
        internal static string Edit_SourceFileNameProperty {
            get {
                return ResourceManager.GetString("Edit_SourceFileNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XMLFile Path.
        /// </summary>
        internal static string Edit_SourceFilePathProperty {
            get {
                return ResourceManager.GetString("Edit_SourceFilePathProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source Name.
        /// </summary>
        internal static string Edit_SourceNameProperty {
            get {
                return ResourceManager.GetString("Edit_SourceNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specification Directory.
        /// </summary>
        internal static string Edit_SpecificationDirectoryProperty {
            get {
                return ResourceManager.GetString("Edit_SpecificationDirectoryProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Order.
        /// </summary>
        internal static string Edit_SpecificationOrderProperty {
            get {
                return ResourceManager.GetString("Edit_SpecificationOrderProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specification Source.
        /// </summary>
        internal static string Edit_SpecificationSourceHeader {
            get {
                return ResourceManager.GetString("Edit_SpecificationSourceHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specification Source ID.
        /// </summary>
        internal static string Edit_SpecificationSourceIDProperty {
            get {
                return ResourceManager.GetString("Edit_SpecificationSourceIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spec Source Name.
        /// </summary>
        internal static string Edit_SpecSourceNameProperty {
            get {
                return ResourceManager.GetString("Edit_SpecSourceNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spec Template.
        /// </summary>
        internal static string Edit_SpecTemplateHeader {
            get {
                return ResourceManager.GetString("Edit_SpecTemplateHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stage.
        /// </summary>
        internal static string Edit_StageHeader {
            get {
                return ResourceManager.GetString("Edit_StageHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stage ID.
        /// </summary>
        internal static string Edit_StageIDProperty {
            get {
                return ResourceManager.GetString("Edit_StageIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stage Name.
        /// </summary>
        internal static string Edit_StageNameProperty {
            get {
                return ResourceManager.GetString("Edit_StageNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stage Transition.
        /// </summary>
        internal static string Edit_StageTransitionHeader {
            get {
                return ResourceManager.GetString("Edit_StageTransitionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stage Transition ID.
        /// </summary>
        internal static string Edit_StageTransitionIDProperty {
            get {
                return ResourceManager.GetString("Edit_StageTransitionIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stage Transition Name.
        /// </summary>
        internal static string Edit_StageTransitionNameHeader {
            get {
                return ResourceManager.GetString("Edit_StageTransitionNameHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stage Transition Name.
        /// </summary>
        internal static string Edit_StageTransitionNameProperty {
            get {
                return ResourceManager.GetString("Edit_StageTransitionNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State.
        /// </summary>
        internal static string Edit_StateHeader {
            get {
                return ResourceManager.GetString("Edit_StateHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State ID.
        /// </summary>
        internal static string Edit_StateIDProperty {
            get {
                return ResourceManager.GetString("Edit_StateIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State Model.
        /// </summary>
        internal static string Edit_StateModelHeader {
            get {
                return ResourceManager.GetString("Edit_StateModelHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State Model ID.
        /// </summary>
        internal static string Edit_StateModelIDProperty {
            get {
                return ResourceManager.GetString("Edit_StateModelIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State Model Name.
        /// </summary>
        internal static string Edit_StateModelNameProperty {
            get {
                return ResourceManager.GetString("Edit_StateModelNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State Name.
        /// </summary>
        internal static string Edit_StateNameProperty {
            get {
                return ResourceManager.GetString("Edit_StateNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State Transition.
        /// </summary>
        internal static string Edit_StateTransitionHeader {
            get {
                return ResourceManager.GetString("Edit_StateTransitionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State Transition ID.
        /// </summary>
        internal static string Edit_StateTransitionIDProperty {
            get {
                return ResourceManager.GetString("Edit_StateTransitionIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State Transition Name.
        /// </summary>
        internal static string Edit_StateTransitionNameHeader {
            get {
                return ResourceManager.GetString("Edit_StateTransitionNameHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State Transition Name.
        /// </summary>
        internal static string Edit_StateTransitionNameProperty {
            get {
                return ResourceManager.GetString("Edit_StateTransitionNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step.
        /// </summary>
        internal static string Edit_StepHeader {
            get {
                return ResourceManager.GetString("Edit_StepHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step ID.
        /// </summary>
        internal static string Edit_StepIDProperty {
            get {
                return ResourceManager.GetString("Edit_StepIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step Name.
        /// </summary>
        internal static string Edit_StepNameProperty {
            get {
                return ResourceManager.GetString("Edit_StepNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step Transition.
        /// </summary>
        internal static string Edit_StepTransitionHeader {
            get {
                return ResourceManager.GetString("Edit_StepTransitionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step Transition ID.
        /// </summary>
        internal static string Edit_StepTransitionIDProperty {
            get {
                return ResourceManager.GetString("Edit_StepTransitionIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step Transition Name.
        /// </summary>
        internal static string Edit_StepTransitionNameHeader {
            get {
                return ResourceManager.GetString("Edit_StepTransitionNameHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step Transition Name.
        /// </summary>
        internal static string Edit_StepTransitionNameProperty {
            get {
                return ResourceManager.GetString("Edit_StepTransitionNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tagged Items.
        /// </summary>
        internal static string Edit_TaggedItemsProperty {
            get {
                return ResourceManager.GetString("Edit_TaggedItemsProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag.
        /// </summary>
        internal static string Edit_TagHeader {
            get {
                return ResourceManager.GetString("Edit_TagHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag Management.
        /// </summary>
        internal static string Edit_TagManagementHeader {
            get {
                return ResourceManager.GetString("Edit_TagManagementHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag Name.
        /// </summary>
        internal static string Edit_TagNameProperty {
            get {
                return ResourceManager.GetString("Edit_TagNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag.
        /// </summary>
        internal static string Edit_TagProperty {
            get {
                return ResourceManager.GetString("Edit_TagProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tags.
        /// </summary>
        internal static string Edit_TagsProperty {
            get {
                return ResourceManager.GetString("Edit_TagsProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content.
        /// </summary>
        internal static string Edit_TemplateContentProperty {
            get {
                return ResourceManager.GetString("Edit_TemplateContentProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template ID.
        /// </summary>
        internal static string Edit_TemplateIDProperty {
            get {
                return ResourceManager.GetString("Edit_TemplateIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template Name.
        /// </summary>
        internal static string Edit_TemplateNameProperty {
            get {
                return ResourceManager.GetString("Edit_TemplateNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output.
        /// </summary>
        internal static string Edit_TemplateOutputProperty {
            get {
                return ResourceManager.GetString("Edit_TemplateOutputProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template Path.
        /// </summary>
        internal static string Edit_TemplatePathProperty {
            get {
                return ResourceManager.GetString("Edit_TemplatePathProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template.
        /// </summary>
        internal static string Edit_TemplateProperty {
            get {
                return ResourceManager.GetString("Edit_TemplateProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Templates Called.
        /// </summary>
        internal static string Edit_TemplatesCalledProperty {
            get {
                return ResourceManager.GetString("Edit_TemplatesCalledProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Name.
        /// </summary>
        internal static string Edit_TestNameProperty {
            get {
                return ResourceManager.GetString("Edit_TestNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tier.
        /// </summary>
        internal static string Edit_TierCodeProperty {
            get {
                return ResourceManager.GetString("Edit_TierCodeProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tier.
        /// </summary>
        internal static string Edit_TierNameProperty {
            get {
                return ResourceManager.GetString("Edit_TierNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To Stage ID.
        /// </summary>
        internal static string Edit_ToStageIDProperty {
            get {
                return ResourceManager.GetString("Edit_ToStageIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To Stage.
        /// </summary>
        internal static string Edit_ToStageIDSelection {
            get {
                return ResourceManager.GetString("Edit_ToStageIDSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transitions To This.
        /// </summary>
        internal static string Edit_ToStageTransitionListProperty {
            get {
                return ResourceManager.GetString("Edit_ToStageTransitionListProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To State ID.
        /// </summary>
        internal static string Edit_ToStateIDProperty {
            get {
                return ResourceManager.GetString("Edit_ToStateIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To State.
        /// </summary>
        internal static string Edit_ToStateIDSelection {
            get {
                return ResourceManager.GetString("Edit_ToStateIDSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transitions To This.
        /// </summary>
        internal static string Edit_ToStateTransitionListProperty {
            get {
                return ResourceManager.GetString("Edit_ToStateTransitionListProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To Step ID.
        /// </summary>
        internal static string Edit_ToStepIDProperty {
            get {
                return ResourceManager.GetString("Edit_ToStepIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To Step.
        /// </summary>
        internal static string Edit_ToStepIDSelection {
            get {
                return ResourceManager.GetString("Edit_ToStepIDSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transitions To This.
        /// </summary>
        internal static string Edit_ToStepTransitionListProperty {
            get {
                return ResourceManager.GetString("Edit_ToStepTransitionListProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transitions.
        /// </summary>
        internal static string Edit_TransitionsHeader {
            get {
                return ResourceManager.GetString("Edit_TransitionsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Relative Paths (useful only after solution is saved to a location).
        /// </summary>
        internal static string Edit_UseRelativePathsProperty {
            get {
                return ResourceManager.GetString("Edit_UseRelativePathsProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Name.
        /// </summary>
        internal static string Edit_UserNameProperty {
            get {
                return ResourceManager.GetString("Edit_UserNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value Constraint.
        /// </summary>
        internal static string Edit_ValueConstraintProperty {
            get {
                return ResourceManager.GetString("Edit_ValueConstraintProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        internal static string Edit_ValueHeader {
            get {
                return ResourceManager.GetString("Edit_ValueHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value ID.
        /// </summary>
        internal static string Edit_ValueIDProperty {
            get {
                return ResourceManager.GetString("Edit_ValueIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Values.
        /// </summary>
        internal static string Edit_ValueListProperty {
            get {
                return ResourceManager.GetString("Edit_ValueListProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value Name.
        /// </summary>
        internal static string Edit_ValueNameHeader {
            get {
                return ResourceManager.GetString("Edit_ValueNameHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value Name.
        /// </summary>
        internal static string Edit_ValueNameProperty {
            get {
                return ResourceManager.GetString("Edit_ValueNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Values.
        /// </summary>
        internal static string Edit_ValuesHeader {
            get {
                return ResourceManager.GetString("Edit_ValuesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View.
        /// </summary>
        internal static string Edit_ViewHeader {
            get {
                return ResourceManager.GetString("Edit_ViewHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View ID.
        /// </summary>
        internal static string Edit_ViewIDProperty {
            get {
                return ResourceManager.GetString("Edit_ViewIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View Name.
        /// </summary>
        internal static string Edit_ViewNameProperty {
            get {
                return ResourceManager.GetString("Edit_ViewNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View Property.
        /// </summary>
        internal static string Edit_ViewPropertyHeader {
            get {
                return ResourceManager.GetString("Edit_ViewPropertyHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View Property ID.
        /// </summary>
        internal static string Edit_ViewPropertyIDProperty {
            get {
                return ResourceManager.GetString("Edit_ViewPropertyIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VStudio Version.
        /// </summary>
        internal static string Edit_VisualStudioProperty {
            get {
                return ResourceManager.GetString("Edit_VisualStudioProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workflow.
        /// </summary>
        internal static string Edit_WorkflowHeader {
            get {
                return ResourceManager.GetString("Edit_WorkflowHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workflow ID.
        /// </summary>
        internal static string Edit_WorkflowIDProperty {
            get {
                return ResourceManager.GetString("Edit_WorkflowIDProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workflow Name.
        /// </summary>
        internal static string Edit_WorkflowNameProperty {
            get {
                return ResourceManager.GetString("Edit_WorkflowNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML Source.
        /// </summary>
        internal static string Edit_XmlSourceHeader {
            get {
                return ResourceManager.GetString("Edit_XmlSourceHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception encountered:.
        /// </summary>
        internal static string Exception_Intro {
            get {
                return ResourceManager.GetString("Exception_Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating/Modifying Code from a Model.
        /// </summary>
        internal static string Help_HowItWorksCreateCodelHeader {
            get {
                return ResourceManager.GetString("Help_HowItWorksCreateCodelHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Once you have a populated Solution Model, you can use it to create and maintain code and other documents.  To do this, you must at least select a Mo+ Code Template in your Solution node to specify how to create your solution.  For most code solutions, you will want to create one or more Projects.  When you create a Project, select a Mo+ Code Template that specifies how to create and update a portion of your solution (such as a business logic layer written in C#).  Each project that outputs code should corre [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_HowItWorksCreateCodelParagraph1 {
            get {
                return ResourceManager.GetString("Help_HowItWorksCreateCodelParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating a Model from Scratch.
        /// </summary>
        internal static string Help_HowItWorksCreateModelHeader {
            get {
                return ResourceManager.GetString("Help_HowItWorksCreateModelHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To create a &lt;b&gt;Mo+&lt;/b&gt; solution model from scratch, just use the Solution Builder interface.  First, create a Solution at the top level, then add additional nodes such as Features, Entities, and Properties, etc., whatever data is required for your output code or documents.
        ///&lt;br&gt;&lt;br&gt;
        ///When you are done, save your solution.  The solution file is stored as a Mo+ Model Doc, which is an xml file containing the data that you entered.
        ///&lt;br&gt;&lt;br&gt;
        ///Once you have a populated model, you can start using it to generate c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_HowItWorksCreateModelParagraph1 {
            get {
                return ResourceManager.GetString("Help_HowItWorksCreateModelParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How It Works.
        /// </summary>
        internal static string Help_HowItWorksHeader {
            get {
                return ResourceManager.GetString("Help_HowItWorksHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading a Model from a Source.
        /// </summary>
        internal static string Help_HowItWorksLoadModelHeader {
            get {
                return ResourceManager.GetString("Help_HowItWorksLoadModelHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you have a database or xml file that provides information about your solution, the best way to utilize this information is to set up specification sources to load your model with this information.  First, create a Solution at the top level, then under &lt;i&gt;Specification Sources&lt;/i&gt;, create a Database or Xml source and enter information to connect to your source.  You will also need to choose a Mo+ Specification template that instructs how to build and update the Solution Model from your source.
        ///&lt;br&gt;&lt;br&gt;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_HowItWorksLoadModelParagraph1 {
            get {
                return ResourceManager.GetString("Help_HowItWorksLoadModelParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Mo+ Solution Builder&lt;/b&gt; is a powerful tool that allows users to create and maintain models and source code and other document solutions in any platform or language as part of a model driven development process.  The following diagram illustrates the basic elements of that process that is supported by Mo+ Solution Builder..
        /// </summary>
        internal static string Help_HowItWorksParagraph1 {
            get {
                return ResourceManager.GetString("Help_HowItWorksParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In a nutshell, the basic process of using &lt;b&gt;Mo+ Solution Builder&lt;/b&gt; to create models and output solutions is:
        ///&lt;ul&gt;
        ///&lt;li&gt;Using the Solution Builder Interface, the user creates a Mo+ model, optionally specifying where model information is going to come from as specification sources.  For each specification source, the user chooses a Mo+ template which outlines how to update model information from that source.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;The Specification Interpreter processes each specification source to evaluate the  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_HowItWorksParagraph2 {
            get {
                return ResourceManager.GetString("Help_HowItWorksParagraph2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration Properties.
        /// </summary>
        internal static string Help_LanguageReferenceConfigurationPropertiesHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceConfigurationPropertiesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;&amp;lt;%%=&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:chocolate&quot;&gt;&lt;b&gt;IGNOREDAREAEND&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;string&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;%%&amp;gt;&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;string&lt;/i&gt; is a string literal value.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;IGNOREDAREAEND&lt;/i&gt; configuration property is used to define a ending area or tag that represents an ignored a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceConfigurationPropertiesIgnoredAreaEndMethodParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceConfigurationPropertiesIgnoredAreaEndMethodParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;&amp;lt;%%=&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:chocolate&quot;&gt;&lt;b&gt;IGNOREDAREASTART&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;string&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;%%&amp;gt;&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;string&lt;/i&gt; is a string literal value.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;IGNOREDAREASTART&lt;/i&gt; configuration property is used to define a starting area or tag that represents an ign [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceConfigurationPropertiesIgnoredAreaStartMethodParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceConfigurationPropertiesIgnoredAreaStartMethodParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;&amp;lt;%%=&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:chocolate&quot;&gt;&lt;b&gt;NOW&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;%%&amp;gt;&lt;/b&gt;&lt;/span&gt;
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code and spec template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;NOW&lt;/i&gt; configuration property is used to get the current date.  This is most often used to mark the date a file was generated.
        ///&lt;br&gt;&lt;br&gt;
        ///For example:
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;&amp;lt;%%=&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceConfigurationPropertiesNowMethodParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceConfigurationPropertiesNowMethodParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration properties in the &lt;b&gt;Mo+&lt;/b&gt; model oriented programming language get and/or set global information that is used to aid in the management of solution models or output solution code or documents.  As configuration property data is global, a value set by one template can be used by subsequent template calls.  Often, configuration properties are managed by higher level templates.
        ///&lt;br&gt;&lt;br&gt;
        ///Configuration properties can only appear inside property tags (&lt;span style=&quot;color:gray;background-color:yell [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceConfigurationPropertiesParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceConfigurationPropertiesParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;&amp;lt;%%=&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:chocolate&quot;&gt;&lt;b&gt;PROTECTEDAREAEND&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;string&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;%%&amp;gt;&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;string&lt;/i&gt; is a string literal value.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;PROTECTEDAREAEND&lt;/i&gt; configuration property is used to define a ending area or tag that represents a protec [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceConfigurationPropertiesProtectedAreaEndMethodParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceConfigurationPropertiesProtectedAreaEndMethodParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;&amp;lt;%%=&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:chocolate&quot;&gt;&lt;b&gt;PROTECTEDAREASTART&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;string&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;%%&amp;gt;&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;string&lt;/i&gt; is a string literal value.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;PROTECTEDAREASTART&lt;/i&gt; configuration property is used to define a starting area or tag that represents a  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceConfigurationPropertiesProtectedAreaStartMethodParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceConfigurationPropertiesProtectedAreaStartMethodParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;&amp;lt;%%=&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:chocolate&quot;&gt;&lt;b&gt;TAB&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;number&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;%%&amp;gt;&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;number&lt;/i&gt; is a numeric literal value, positive or negative.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;TAB&lt;/i&gt; configuration property is used to increment or decrement the number of tab stops to add t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceConfigurationPropertiesTabMethodParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceConfigurationPropertiesTabMethodParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;&amp;lt;%%=&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:chocolate&quot;&gt;&lt;b&gt;TABSTRING&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;string&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;%%&amp;gt;&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;string&lt;/i&gt; is a string literal value.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;TABSTRING&lt;/i&gt; configuration property is used to determine what to output for a tab when using the &lt;i&gt;USETABS&lt;/i&gt; t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceConfigurationPropertiesTabStringMethodParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceConfigurationPropertiesTabStringMethodParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;&amp;lt;%%=&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:chocolate&quot;&gt;&lt;b&gt;USEIGNOREDAREAS&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;true/false&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;%%&amp;gt;&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;true/false&lt;/i&gt; is either true or false.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;USEIGNOREDAREAS&lt;/i&gt; configuration property is used to turn the ignored area feature on or off.  An ign [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceConfigurationPropertiesUseIgnoredAreasMethodaragraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceConfigurationPropertiesUseIgnoredAreasMethodaragraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;&amp;lt;%%=&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:chocolate&quot;&gt;&lt;b&gt;USEPROTECTEDAREAS&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;true/false&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;%%&amp;gt;&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;true/false&lt;/i&gt; is either true or false.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;USEPROTECTEDAREAS&lt;/i&gt; configuration property is used to turn the protected area feature on or off.   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceConfigurationPropertiesUseProtectedAreasMethodaragraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceConfigurationPropertiesUseProtectedAreasMethodaragraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;&amp;lt;%%=&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:chocolate&quot;&gt;&lt;b&gt;USER&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;%%&amp;gt;&lt;/b&gt;&lt;/span&gt;
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code and spec template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;USER&lt;/i&gt; configuration property is used to get the current logged in user.  This is most often used to mark who initiated the generation of a file.
        ///&lt;br&gt;&lt;br&gt;
        ///For example:
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;span style=&quot;color:gray;background-colo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceConfigurationPropertiesUserMethodParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceConfigurationPropertiesUserMethodParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;&amp;lt;%%=&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:chocolate&quot;&gt;&lt;b&gt;USETABS&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;true/false&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:gray;background-color:yellow&quot;&gt;&lt;b&gt;%%&amp;gt;&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;true/false&lt;/i&gt; is either true or false.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;USETABS&lt;/i&gt; configuration property is used to turn the tab management feature on or off.  Tab management is us [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceConfigurationPropertiesUseTabsMethodParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceConfigurationPropertiesUseTabsMethodParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language Features.
        /// </summary>
        internal static string Help_LanguageReferenceFeaturesHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFeaturesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model Context.
        /// </summary>
        internal static string Help_LanguageReferenceFeaturesModelContextHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFeaturesModelContextHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Mo+&lt;/b&gt; is a model oriented language, primarily due to its use of a notion called &lt;b&gt;Model Context&lt;/b&gt;, which makes it easier to utilize data in the solution model.  There are three forms of model context that can be utilized any time:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;Stack Context (template based)&lt;/b&gt;: Stack context provides a means to get model data from the template&apos;s context stack.  When a template is called by the interpreter, a context stack is created and populated with an instance of the model element that the temp [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFeaturesModelContextParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFeaturesModelContextParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When this template is called, the &lt;i&gt;Solution&lt;/i&gt; instance (we will call it &lt;i&gt;My Solution&lt;/i&gt;) is passed to it and pushed onto the context stack.
        ///&lt;br&gt;&lt;br&gt;
        ///At line 1, the context stack looks like this:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;span style=&quot;color:green&quot;&gt;&lt;b&gt;My Solution&lt;/b&gt;&lt;/span&gt;&lt;/li&gt;
        ///&lt;/ul&gt;
        ///At line 4, a collection of each &lt;i&gt;Entity&lt;/i&gt; in the &lt;i&gt;Solution&lt;/i&gt; is gathered, and each &lt;i&gt;Entity&lt;/i&gt; encountered is pushed onto the context stack within the scope of the &lt;b&gt;&lt;span style=&quot;color:blue&quot;&gt;foreach&lt;/span&gt;&lt;/b&gt; statement ( [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFeaturesModelContextParagraph2 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFeaturesModelContextParagraph2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Managing Models and Code.
        /// </summary>
        internal static string Help_LanguageReferenceFeaturesModelsAndCodeHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFeaturesModelsAndCodeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &lt;b&gt;Mo+&lt;/b&gt; language has a few additional high level features geared towards managing solution models and output solutions in a model driven development process:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;Not Strongly Typed&lt;/b&gt;: By design, the language is not strongly typed, in order to facilitate its primary purpose to manage models and textual output.  The &lt;b&gt;Mo+&lt;/b&gt; interpreter will freely convert built in properties, declared variables, and template content to/from their natural type and string values.  For example, if a templat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFeaturesModelsAndCodeParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFeaturesModelsAndCodeParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Similarities to Object Oriented Languages.
        /// </summary>
        internal static string Help_LanguageReferenceFeaturesOOHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFeaturesOOHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Mo+&lt;/b&gt; has a number of similarities to object oriented languages:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;Model Structure (like objects)&lt;/b&gt;: &lt;b&gt;Mo+&lt;/b&gt; provides the ability to utilize built in elements in the solution model structure (such as &lt;i&gt;Entity&lt;/i&gt;, &lt;i&gt;Relationship&lt;/i&gt;, and &lt;i&gt;Property&lt;/i&gt;), and provides the ability for users to define their own elements in the model structure.  This is analogous to being able to utilize existing or create new objects in oo languages.  Specifically, spec templates provide users with the [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFeaturesOOParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFeaturesOOParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Mo+&lt;/b&gt; model oriented programming language has a rich set of features that are geared towards model driven development.  &lt;b&gt;Mo+&lt;/b&gt; has many similar features to object oriented languages, and its syntax is somewhat similar to &lt;b&gt;C#&lt;/b&gt; or &lt;b&gt;Java&lt;/b&gt;, but &lt;b&gt;Mo+&lt;/b&gt; also has a number of unique model oriented features.
        ///&lt;br&gt;&lt;br&gt;
        ///This section is intended to give the user an overall feel for the &lt;b&gt;Mo+&lt;/b&gt; language, and is broken down as follows:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;Similarities to Object Oriented Languages&lt;/b&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFeaturesParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFeaturesParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Column(&lt;/b&gt;&lt;/span&gt;columnName&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;columnName&lt;/i&gt; is any expression (property, template call, literal, etc.) that specifies the name of the column in the current record to get data from.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code and spec template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;Column&lt;/i&gt; function is used to retrieve a value from a column of a database record.  To be used in conjunction with the &lt;span style=&quot;color: [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsColumnMethodParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsColumnMethodParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;FileExists&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;path&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;path&lt;/i&gt; is any expression (property, template call, literal, etc.) that specifies the full path to get file existence from.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In the &lt;i&gt;Output&lt;/i&gt; areas of code templates only.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;FileExists&lt;/i&gt; function is used to test the existence of a file (usually in the output solution directory), and ret [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsFileExistsMethodParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsFileExistsMethodParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;File&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;path&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;path&lt;/i&gt; is any expression (property, template call, literal, etc.) that specifies the full path to get textual data from.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In the &lt;i&gt;Output&lt;/i&gt; areas of code templates only.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;File&lt;/i&gt; function is used to retrieve the texual contents of a file (usually in the output solution directory).  This funct [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsFileMethodParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsFileMethodParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;modelContext&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;FindAll&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;property&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;,&amp;nbsp;&lt;/b&gt;&lt;/span&gt;expression&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;modelContext&lt;/i&gt; refers (by any form of model context) to an instance of a solution model element (or for spec templates can be an instance of a specifica [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsFindAllMethodParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsFindAllMethodParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;modelContext&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Find&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;expression&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;modelContext&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Find&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;property&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;,&amp;n [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsFindMethodParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsFindMethodParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Functions.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;LogValue(&lt;/b&gt;&lt;/span&gt;logGroup, logName&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;logGroup&lt;/i&gt; is any expression (property, template call, literal, etc.) that specifies a log group, for grouping related items.&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;logName&lt;/i&gt; is any expression (property, template call, literal, etc.) that specifies the (unique) name of the item to be logged.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code and spec template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;Lo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsLogMethodParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsLogMethodParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Functions in the &lt;b&gt;Mo+&lt;/b&gt; model oriented programming language perform some transformation on string and other data, or aid in getting single or multiple instances in the solution model.
        ///&lt;br&gt;&lt;br&gt;
        ///This section is broken down by each function, describing:
        ///&lt;ul&gt;
        ///&lt;li&gt;Valid syntax for using the function.&lt;/li&gt;
        ///&lt;li&gt;What the function can do and how it can be used.&lt;/li&gt;
        ///&lt;li&gt;An example using the function.&lt;/li&gt;
        ///&lt;/ul&gt;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: string&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;CamelCase&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;()&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;string&lt;/i&gt; is any model property (or specification property for spec templates) or template call that has a string value.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all spec and code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;CamelCase&lt;/i&gt; function is used to convert a string value to camel case.  For example, the result of &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Pr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsStringCamelCaseParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsStringCamelCaseParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: string&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;CapitalCase&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;()&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;string&lt;/i&gt; is any model property (or specification property for spec templates) or template call that has a string value.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all spec and code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;CapitalCase&lt;/i&gt; function is used to convert a string value to capital case.  For example, the result of &lt;span style=&quot;color:teal&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsStringCapitalCaseParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsStringCapitalCaseParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: string&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;CapitalWordCase&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;()&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;string&lt;/i&gt; is any model property (or specification property for spec templates) or template call that has a string value.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all spec and code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;CapitalWordCase&lt;/i&gt; function is used to convert a string value to a set of capitalized words, essentially breaking intercap  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsStringCapitalWordCaseParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsStringCapitalWordCaseParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: text&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Contains&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;string&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;text&lt;/i&gt; is any model property (or specification property for spec templates) or template call that has textual (string) content.&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;string&lt;/i&gt; is any expression (property, template call, literal, etc.) that specifies a string to search for.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsStringContainsParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsStringContainsParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: text&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;EndsWith&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;string&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;text&lt;/i&gt; is any model property (or specification property for spec templates) or template call that has textual (string) content.&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;string&lt;/i&gt; is any expression (property, template call, literal, etc.) that specifies a string to search for.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsStringEndsWithParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsStringEndsWithParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: text&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;FilterIgnored&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;()&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;text&lt;/i&gt; is any model property (or specification property for spec templates) or template call that has textual (string) content.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all spec and code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;FilterIgnored&lt;/i&gt; function is used to filter the input &lt;i&gt;text&lt;/i&gt; by &lt;i&gt;IGNOREDAREASTART&lt;/i&gt; and &lt;i&gt;IGNOREDAREAEND&lt;/i&gt;  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsStringFilterIgnoredParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsStringFilterIgnoredParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: text&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Filter&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;beginTag&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;,&amp;nbsp;&lt;/b&gt;&lt;/span&gt;endTag&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;text&lt;/i&gt; is any model property (or specification property for spec templates) or template call that has textual (string) content.&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;beginTag&lt;/i&gt; is any expression (property, template call, literal, etc.) that specifies a stri [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsStringFilterParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsStringFilterParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: text&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;FilterProtected&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;()&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;text&lt;/i&gt; is any model property (or specification property for spec templates) or template call that has textual (string) content.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all spec and code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;FilterProtected&lt;/i&gt; function is used to filter the input &lt;i&gt;text&lt;/i&gt; by &lt;i&gt;PROTECTEDAREASTART&lt;/i&gt; and &lt;i&gt;PROTECTEDAREA [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsStringFilterProtectedParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsStringFilterProtectedParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: text&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;IndexOf&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;string&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;text&lt;/i&gt; is any model property (or specification property for spec templates) or template call that has textual (string) content.&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;string&lt;/i&gt; is any expression (property, template call, literal, etc.) that specifies a string to search for.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In al [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsStringIndexOfParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsStringIndexOfParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: text&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;RegexIsMatch&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;regex&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;text&lt;/i&gt; is any model property (or specification property for spec templates) or template call that has textual (string) content.&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;regex&lt;/i&gt; is any regular expression to match the &lt;i&gt;text&lt;/i&gt; with.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all spec and code template areas.
        ///&lt;br&gt;&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsStringRegexIsMatchParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsStringRegexIsMatchParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: text&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;RegexReplace&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;regex&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;,&amp;nbsp;&lt;/b&gt;&lt;/span&gt;replace&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;text&lt;/i&gt; is any model property (or specification property for spec templates) or template call that has textual (string) content.&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;regex&lt;/i&gt; is any regular expression to match the &lt;i&gt;text&lt;/i&gt; with.&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsStringRegexReplaceParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsStringRegexReplaceParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: text&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Replace&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;find&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;,&amp;nbsp;&lt;/b&gt;&lt;/span&gt;replace&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;text&lt;/i&gt; is any model property (or specification property for spec templates) or template call that has textual (string) content.&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;find&lt;/i&gt; is any expression yielding a string to match the &lt;i&gt;text&lt;/i&gt; with.&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;:  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsStringReplaceParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsStringReplaceParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: text&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;StartsWith&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;string&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;text&lt;/i&gt; is any model property (or specification property for spec templates) or template call that has textual (string) content.&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;string&lt;/i&gt; is any expression (property, template call, literal, etc.) that specifies a string to search for.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsStringStartsWithParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsStringStartsWithParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: text&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Substring&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;startIndex&lt;i&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;,&amp;nbsp;&lt;/b&gt;&lt;/span&gt;length&lt;/i&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;text&lt;/i&gt; is any model property (or specification property for spec templates) or template call that has textual (string) content.&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;startIndex&lt;/i&gt; is any expression yielding an integer for the starting index withi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsStringSubstringParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsStringSubstringParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: string&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;ToLower&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;()&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;string&lt;/i&gt; is any model property (or specification property for spec templates) or template call that has a string value.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all spec and code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;ToLower&lt;/i&gt; function is used to convert a string value to lower case.  For example, the result of &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Proper [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsStringToLowerParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsStringToLowerParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: string&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;ToUpper&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;()&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;string&lt;/i&gt; is any model property (or specification property for spec templates) or template call that has a string value.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all spec and code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;ToUpper&lt;/i&gt; function is used to convert a string value to upper case.  For example, the result of &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Proper [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsStringToUpperParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsStringToUpperParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: string&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;TrimEnd&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;()&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;string&lt;/i&gt; is any model property (or specification property for spec templates) or template call that has a string value.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all spec and code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;TrimEnd&lt;/i&gt; function is used to trim white space off the end of a string value.  For example, the result of &lt;span style=&quot;color:teal&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsStringTrimEndParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsStringTrimEndParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: string&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Trim&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;()&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;string&lt;/i&gt; is any model property (or specification property for spec templates) or template call that has a string value.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all spec and code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;Trim&lt;/i&gt; function is used to trim white space off of both ends of a string value.  For example, the result of &lt;span style=&quot;color:teal&quot;&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsStringTrimParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsStringTrimParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: string&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;TrimStart&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;()&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;string&lt;/i&gt; is any model property (or specification property for spec templates) or template call that has a string value.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all spec and code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;TrimStart&lt;/i&gt; function is used to trim white space off the beginning of a string value.  For example, the result of &lt;span style=&quot;c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsStringTrimStartParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsStringTrimStartParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: string&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;UnderscoreCase&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;()&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;string&lt;/i&gt; is any model property (or specification property for spec templates) or template call that has a string value.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all spec and code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;UnderscoreCase&lt;/i&gt; function is used to convert a string value to underscore case.  For example, the result of &lt;span style=&quot;co [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceFunctionsStringUnderscoreCaseParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceFunctionsStringUnderscoreCaseParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mo+ Language Reference.
        /// </summary>
        internal static string Help_LanguageReferenceHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arithmetic Operators.
        /// </summary>
        internal static string Help_LanguageReferenceOperatorsArithmeticHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceOperatorsArithmeticHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: expression&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;&amp;nbsp;+&amp;nbsp;&lt;/b&gt;&lt;/span&gt;expression&lt;br&gt;
        ///&lt;b&gt;Syntax&lt;/b&gt;: expression&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;&amp;nbsp;-&amp;nbsp;&lt;/b&gt;&lt;/span&gt;expression&lt;br&gt;
        ///&lt;b&gt;Syntax&lt;/b&gt;: expression&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;&amp;nbsp;*&amp;nbsp;&lt;/b&gt;&lt;/span&gt;expression&lt;br&gt;
        ///&lt;b&gt;Syntax&lt;/b&gt;: expression&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;&amp;nbsp;/&amp;nbsp;&lt;/b&gt;&lt;/span&gt;expression&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;expression&lt;/i&gt; is one of the following:
        ///&lt;ul&gt;
        ///&lt;li&gt;A declared &lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;variable&lt;/b&gt;&lt;/span&gt; or &lt;span sty [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceOperatorsArithmeticParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceOperatorsArithmeticParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assignment Operator.
        /// </summary>
        internal static string Help_LanguageReferenceOperatorsAssignmentHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceOperatorsAssignmentHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: assignableProperty &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;&amp;nbsp;=&amp;nbsp;&lt;/b&gt;&lt;/span&gt;value&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;assignableProperty&lt;/i&gt; is one of the following:
        ///&lt;ul&gt;
        ///&lt;li&gt;A declared &lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;variable&lt;/b&gt;&lt;/span&gt;.&lt;/li&gt;
        ///&lt;li&gt;A &lt;i&gt;Current&lt;/i&gt; model element, such as &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;CurrentEntity&lt;/b&gt;&lt;/span&gt;.&lt;/li&gt;
        ///&lt;li&gt;A declared &lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;parameter&lt;/b&gt;&lt;/span&gt;, as part of a call to another template.&lt;/li&gt;
        ///&lt;li&gt;An assignable property of a solution model element, s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceOperatorsAssignmentParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceOperatorsAssignmentParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operators.
        /// </summary>
        internal static string Help_LanguageReferenceOperatorsHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceOperatorsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logical Operators.
        /// </summary>
        internal static string Help_LanguageReferenceOperatorsLogicalHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceOperatorsLogicalHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: expression&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;&amp;nbsp;&amp;&amp;&amp;nbsp;&lt;/b&gt;&lt;/span&gt;expression&lt;br&gt;
        ///&lt;b&gt;Syntax&lt;/b&gt;: expression&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;&amp;nbsp;||&amp;nbsp;&lt;/b&gt;&lt;/span&gt;expression&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;expression&lt;/i&gt; is one of the following:
        ///&lt;ul&gt;
        ///&lt;li&gt;A declared &lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;variable&lt;/b&gt;&lt;/span&gt; or &lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;parameter&lt;/b&gt;&lt;/span&gt;.&lt;/li&gt;
        ///&lt;li&gt;A &lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;template&lt;/b&gt;&lt;/span&gt; call, with or without parameters.&lt;/li&gt;
        ///&lt;li&gt;A solution model element &lt;span style= [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceOperatorsLogicalParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceOperatorsLogicalParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operators in the &lt;b&gt;Mo+&lt;/b&gt; model oriented programming language are similar to other languages, and perform various forms of retrieving, testing, and/or transformation of data.
        ///&lt;br&gt;&lt;br&gt;
        ///This section is broken down by each operator type, describing:
        ///&lt;ul&gt;
        ///&lt;li&gt;Valid syntax for using the operator.&lt;/li&gt;
        ///&lt;li&gt;How the operator can be used.&lt;/li&gt;
        ///&lt;li&gt;What the operator can do with examples.&lt;/li&gt;
        ///&lt;/ul&gt;.
        /// </summary>
        internal static string Help_LanguageReferenceOperatorsParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceOperatorsParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Relational Operators.
        /// </summary>
        internal static string Help_LanguageReferenceOperatorsRelationalHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceOperatorsRelationalHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: expression&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;&amp;nbsp;==&amp;nbsp;&lt;/b&gt;&lt;/span&gt;expression&lt;br&gt;
        ///&lt;b&gt;Syntax&lt;/b&gt;: expression&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;&amp;nbsp;!=&amp;nbsp;&lt;/b&gt;&lt;/span&gt;expression&lt;br&gt;
        ///&lt;b&gt;Syntax&lt;/b&gt;: expression&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;&amp;nbsp;&amp;gt;&amp;nbsp;&lt;/b&gt;&lt;/span&gt;expression&lt;br&gt;
        ///&lt;b&gt;Syntax&lt;/b&gt;: expression&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;&amp;nbsp;&amp;lt;&amp;nbsp;&lt;/b&gt;&lt;/span&gt;expression&lt;br&gt;
        ///&lt;b&gt;Syntax&lt;/b&gt;: expression&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;&amp;nbsp;&amp;gt;=&amp;nbsp;&lt;/b&gt;&lt;/span&gt;expression&lt;br&gt;
        ///&lt;b&gt;Syntax&lt;/b&gt;: expression&lt;span styl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceOperatorsRelationalParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceOperatorsRelationalParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &lt;b&gt;Mo+&lt;/b&gt; model oriented programming language is key to allowing the user to manage solution models, and from those solution models, manage complex code, model and document solutions as part of a model driven development process.
        ///&lt;br&gt;&lt;br&gt;
        ///This &lt;b&gt;Mo+&lt;/b&gt; language reference provides more details as to what can be done with the language, and is broken down into the following sections:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;Language Features&lt;/b&gt;: This section presents the features of the language at a high level, comparing it t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:teal&quot;&gt;&lt;i&gt;&lt;b&gt;entityContext&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;/i&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;ExtendingEntities&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;entityContext&lt;/i&gt;, if provided, refers (by any form of model context) to an instance of an entity in the solution model.&lt;br&gt;
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code and spec template areas, used in a &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;foreach&lt;/b&gt;&lt;/span&gt; statement &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;in&lt;/b&gt;&lt;/span&gt; clause.
        ///&lt;br&gt;&lt;br [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceSpecialPropertiesExtendingEntitiesCollectionParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceSpecialPropertiesExtendingEntitiesCollectionParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:teal&quot;&gt;&lt;i&gt;&lt;b&gt;entityContext&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;/i&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;BaseAndEntityEntities&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;entityContext&lt;/i&gt;, if provided, refers (by any form of model context) to an instance of an entity in the solution model.&lt;br&gt;
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code and spec template areas, used in a &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;foreach&lt;/b&gt;&lt;/span&gt; statement &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;in&lt;/b&gt;&lt;/span&gt; clause.
        ///&lt;br [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceSpecialPropertiesGetBaseAndEntitiesCollectionParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceSpecialPropertiesGetBaseAndEntitiesCollectionParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:teal&quot;&gt;&lt;i&gt;&lt;b&gt;entityContext&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;/i&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;EntityAndBaseEntities&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;entityContext&lt;/i&gt;, if provided, refers (by any form of model context) to an instance of an entity in the solution model.&lt;br&gt;
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code and spec template areas, used in a &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;foreach&lt;/b&gt;&lt;/span&gt; statement &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;in&lt;/b&gt;&lt;/span&gt; clause.
        ///&lt;br [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceSpecialPropertiesGetEntityAndBasesCollectionParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceSpecialPropertiesGetEntityAndBasesCollectionParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Special Properties.
        /// </summary>
        internal static string Help_LanguageReferenceSpecialPropertiesHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceSpecialPropertiesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;ItemFile&lt;/b&gt;&lt;/span&gt;
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;ItemFile&lt;/i&gt; property is used to get the contents of a file being iterated through in a &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;forfiles&lt;/b&gt;&lt;/span&gt; statement.  This property is used only inside a &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;forfiles&lt;/b&gt;&lt;/span&gt; statement.  For example:
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;forfiles (&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;ProjectDirectory&lt;/b&gt;&lt;/spa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceSpecialPropertiesItemFilePropertyParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceSpecialPropertiesItemFilePropertyParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;ItemIndex&lt;/b&gt;&lt;/span&gt;
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code and spec template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;ItemIndex&lt;/i&gt; property is used to get the (0 based) index of an item in a collection being iterated through in a &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;foreach&lt;/b&gt;&lt;/span&gt; statement.  This property is used only inside a &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;foreach&lt;/b&gt;&lt;/span&gt; statement.  For example:
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;foreach (&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:tea [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceSpecialPropertiesItemIndexPropertyParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceSpecialPropertiesItemIndexPropertyParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;ItemPath&lt;/b&gt;&lt;/span&gt;
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;ItemPath&lt;/i&gt; property is used to get the full file path of a file being iterated through in a &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;forfiles&lt;/b&gt;&lt;/span&gt; statement.  This property is used only inside a &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;forfiles&lt;/b&gt;&lt;/span&gt; statement.  For example:
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;forfiles (&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;ProjectDirectory&lt;/b [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceSpecialPropertiesItemPathPropertyParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceSpecialPropertiesItemPathPropertyParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;LibraryDirectory&lt;/b&gt;&lt;/span&gt;
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code and spec template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;LibraryDirectory&lt;/i&gt; property is used to get the full path to the directory where general library content may be stored.  The location of this directory comes from an application setting.  For example:
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;forfiles (&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;LibraryDirectory&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;,&amp;nbsp;&lt;/ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceSpecialPropertiesLibraryDirectoryPropertyParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceSpecialPropertiesLibraryDirectoryPropertyParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Special properties in the &lt;b&gt;Mo+&lt;/b&gt; model oriented programming language aid in getting model data or provide additional means for iterating through collections of model data.
        ///&lt;br&gt;&lt;br&gt;
        ///This section is broken down by each special property, describing:
        ///&lt;ul&gt;
        ///&lt;li&gt;Valid syntax for using the special property.&lt;/li&gt;
        ///&lt;li&gt;What information the special property provides access to.&lt;/li&gt;
        ///&lt;li&gt;An example using the special property.&lt;/li&gt;
        ///&lt;/ul&gt;.
        /// </summary>
        internal static string Help_LanguageReferenceSpecialPropertiesParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceSpecialPropertiesParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Path&lt;/b&gt;&lt;/span&gt;
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In code template output areas only.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;Path&lt;/i&gt; property is a special property that is used to get (or set) a template&apos;s path for updating content to.  A template can only access its own path in this manner.  For example:
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;var&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;&amp;nbsp;path&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;&amp;nbsp;=&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;P [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceSpecialPropertiesPathPropertyParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceSpecialPropertiesPathPropertyParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:teal&quot;&gt;&lt;i&gt;&lt;b&gt;entityContext&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&lt;/i&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;PathRelationships&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;entityContext&lt;/i&gt;, if provided, refers (by any form of model context) to an instance of an entity in the solution model.&lt;br&gt;
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code and spec template areas, used in a &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;foreach&lt;/b&gt;&lt;/span&gt; statement &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;in&lt;/b&gt;&lt;/span&gt; clause.
        ///&lt;br&gt;&lt;br [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceSpecialPropertiesPathRelationshipsParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceSpecialPropertiesPathRelationshipsParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Record&lt;/b&gt;&lt;/span&gt;
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code and spec template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;Record&lt;/i&gt; property is a special model element that holds the contents of a database record.  To be used in conjunction with the &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Column&lt;/b&gt;&lt;/span&gt; function in a &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;foreach&lt;/b&gt;&lt;/span&gt; statement.  For example, in an &lt;i&gt;Entity&lt;/i&gt; template:
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;foreach (&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceSpecialPropertiesRecordItemParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceSpecialPropertiesRecordItemParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Template&lt;/b&gt;&lt;/span&gt;
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;Template&lt;/i&gt; property is a special property that is used to get the content or induce the output of a &lt;i&gt;Project&lt;/i&gt;&apos;s template, which is selected when the project is edited.  For example:
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;foreach (&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Project&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;{&lt;/ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceSpecialPropertiesTemplatePropertyParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceSpecialPropertiesTemplatePropertyParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Text&lt;/b&gt;&lt;/span&gt;
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code and spec template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;Text&lt;/i&gt; property is a special property that is used to get (or set) a template&apos;s content.  A template can only access its own content in this manner.  For example:
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;var&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;&amp;nbsp;text&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;&amp;nbsp;=&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Text&lt;/b&gt;&lt;/span&gt;&lt;br [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceSpecialPropertiesTextPropertyParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceSpecialPropertiesTextPropertyParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;this&lt;/b&gt;&lt;/span&gt;
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;this&lt;/i&gt; property is used to get the model element instance that is at the top of the stack in the template.  In other words, &lt;i&gt;this&lt;/i&gt; is the model element instance that the template is initially called with.  From this keyword, you can get access to other properties or model elements from the referred to model element instance.
        ///&lt;br&gt;&lt;br&gt;
        ///For example, &lt;span style=&quot;colo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceSpecialPropertiesThisKeywordParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceSpecialPropertiesThisKeywordParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:magenta&quot;&gt;&lt;b&gt;add&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Current&lt;/b&gt;&lt;/span&gt;xxx&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;:  xxx is a valid element type in the solution model, such as &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Entity&lt;/b&gt;&lt;/span&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In the &lt;i&gt;Output&lt;/i&gt; areas of spec templates only.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;add&lt;/i&gt; statement is used to add an instance to the solution model.  For example:
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceStatementsAddTermParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsAddTermParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;break&lt;/b&gt;&lt;/span&gt;
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code and spec template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;break&lt;/i&gt; statement is used to break out of a sequence of statements, including iterations such as &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;foreach&lt;/b&gt;&lt;/span&gt;, &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;while&lt;/b&gt;&lt;/span&gt;, &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;forfiles&lt;/b&gt;&lt;/span&gt;, and a clause in a  &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;case&lt;/b&gt;&lt;/span&gt; statement.  The &lt;i&gt;break&lt;/i&gt; statement can appear within a &lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceStatementsBreakTermParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsBreakTermParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;clear&lt;/b&gt;&lt;/span&gt;
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code and spec template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;clear&lt;/i&gt; statement is used to clear a template&apos;s &lt;i&gt;Content (Text)&lt;/i&gt; (if the statement is in the template&apos;s &lt;i&gt;Context&lt;/i&gt; area), or clear a template&apos;s &lt;i&gt;Output (Path)&lt;/i&gt; (if the statement is in the template&apos;s &lt;i&gt;Output&lt;/i&gt; area).  Any statements that appear after the &lt;i&gt;clear&lt;/i&gt; statement can continue to append to the template&apos;s content (or output)..
        /// </summary>
        internal static string Help_LanguageReferenceStatementsClearTermParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsClearTermParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;continue&lt;/b&gt;&lt;/span&gt;
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code and spec template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;continue&lt;/i&gt; statement is used to skip past the remaining set of statements within iterations such as &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;foreach&lt;/b&gt;&lt;/span&gt;, &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;while&lt;/b&gt;&lt;/span&gt;, and &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;forfiles&lt;/b&gt;&lt;/span&gt;.  The &lt;i&gt;continue&lt;/i&gt; statement can appear within a &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;with&lt;/b&gt;&lt;/span&gt; or &lt;span style=&quot;co [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceStatementsContinueTermParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsContinueTermParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:magenta&quot;&gt;&lt;b&gt;delete&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;&lt;/b&gt;&lt;/span&gt;filePath&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:magenta&quot;&gt;&lt;b&gt;delete&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Current&lt;/b&gt;&lt;/span&gt;xxx&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;:  (for code templates) &lt;i&gt;filePath&lt;/i&gt; is a valid &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;property&lt;/b&gt;&lt;/span&gt;, &lt;span  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceStatementsDeleteTermParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsDeleteTermParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;foreach (&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;element&lt;/b&gt;&lt;/span&gt; &lt;i&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;in&lt;/b&gt;&lt;/span&gt; inExp &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;where&lt;/b&gt;&lt;/span&gt; whereExp &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;limit&lt;/b&gt;&lt;/span&gt; n &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;sort&lt;/b&gt;&lt;/span&gt; property sortDirection&lt;/i&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;) {&amp;nbsp;[statements]&amp;nbsp;}&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: element is a valid model element such as &lt;i&gt;Entity&lt;/i&gt; (or for spec templates a valid specifi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceStatementsForeachTermParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsForeachTermParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;forfiles (&lt;/b&gt;&lt;/span&gt;directory&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;, &amp;nbsp;&lt;/b&gt;&lt;/span&gt;extension&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;) {&amp;nbsp;[statements]&amp;nbsp;}&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: directory is the full path of a file directory.&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: extension is the name of the file extension, including the &quot;.&quot;, such as &quot;.txt&quot;.&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;[statements]&lt;/i&gt; is a set of zero or more valid &lt;b&gt;Mo+&lt;/b&gt; language statements.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In code templat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceStatementsForfilesTermParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsForfilesTermParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Statements.
        /// </summary>
        internal static string Help_LanguageReferenceStatementsHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;if (&lt;/b&gt;&lt;/span&gt;expression&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&amp;nbsp;{&amp;nbsp;[statements]&amp;nbsp;}&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;i&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;else if (&lt;/b&gt;&lt;/span&gt;expression&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&amp;nbsp;{&amp;nbsp;[statements]&amp;nbsp;}&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;else (&lt;/b&gt;&lt;/span&gt;expression&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&amp;nbsp;{&amp;nbsp;[statements]&amp;nbsp;}&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;/i&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;expression&lt;/i&gt; specifies a valid logical expression based on availa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceStatementsIfTermParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsIfTermParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:magenta&quot;&gt;&lt;b&gt;insert&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;path, matchingText, insertText&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:magenta&quot;&gt;&lt;b&gt;insert&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;path, beginTag, endTag, matchingText, insertText&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;path&lt;/i&gt; is any expression (property, template call, literal, etc.) that specifies the full path of the file to be upda [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceStatementsInsertTermParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsInsertTermParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;log(&lt;/b&gt;&lt;/span&gt;logGroup, logName, logValue&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;logGroup&lt;/i&gt; is any expression (property, template call, literal, etc.) that specifies a log group, for grouping related items.&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;logName&lt;/i&gt; is any expression (property, template call, literal, etc.) that specifies the (unique) name of the item to be logged.&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;logValue&lt;/i&gt; is any expression (property, template call, liter [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceStatementsLogTermParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsLogTermParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Statements form the heart of the &lt;b&gt;Mo+&lt;/b&gt; model oriented programming language.  Like statements in other languages, &lt;b&gt;Mo+&lt;/b&gt; statements perform a wide variety of tasks such as iterating, calculating, and transforming.
        ///&lt;br&gt;&lt;br&gt;
        ///This section is broken down by each statement, describing:
        ///&lt;ul&gt;
        ///&lt;li&gt;Valid syntax for using the statement.&lt;/li&gt;
        ///&lt;li&gt;Where the statement can be used.&lt;/li&gt;
        ///&lt;li&gt;What actions the statement can perform.&lt;/li&gt;
        ///&lt;li&gt;What the statement can do with examples.&lt;/li&gt;
        ///&lt;/ul&gt;.
        /// </summary>
        internal static string Help_LanguageReferenceStatementsParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;param&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;parameterName&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;parameterName&lt;/i&gt; is the name of the parameter, an alphanumeric string that doesn&apos;t conflict with other parameters, variables, or reserved words.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code and spec template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;param&lt;/i&gt; statement is used to declare a parameter for a template.  Parameter values cannot be set within the template, but are passed in  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceStatementsParamTermParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsParamTermParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;progress&lt;/b&gt;&lt;/span&gt;&lt;i&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;work&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;/i&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;work&lt;/i&gt;, an optional parameter, is any expression (property, template call, literal, etc.) that results in a numeric value for the amount of work for calculating progress.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code and spec template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;progress&lt;/i&gt; statement is used set the amount of work and report progress du [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceStatementsProgressTermParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsProgressTermParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:magenta&quot;&gt;&lt;b&gt;remove&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;path, matchingText&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:magenta&quot;&gt;&lt;b&gt;remove&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;path, beginTag, endTag, matchingText&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;path&lt;/i&gt; is any expression (property, template call, literal, etc.) that specifies the full path of the file to be updated.&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;:  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceStatementsRemoveTermParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsRemoveTermParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;return&lt;/b&gt;&lt;/span&gt;
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availability&lt;/b&gt;: In all code and spec template areas.
        ///&lt;br&gt;&lt;br&gt;
        ///The &lt;i&gt;return&lt;/i&gt; statement is used to halt execution of any additional statements in the template, even if the &lt;i&gt;return&lt;/i&gt; statement is within nested iterations.  For example:
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;foreach (&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Entity&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;{&lt;/b&gt;&lt;/span&gt;&lt;b [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceStatementsReturnTermParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsReturnTermParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;switch (&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;property&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;&amp;nbsp;{&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;i&gt;
        ///&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;case &lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:slateblue&quot;&gt;&lt;b&gt;literal&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;:&amp;nbsp;[statements]&amp;nbsp;break&lt;/b&gt;&lt;/span&gt;
        ///&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;default:&amp;nbsp;[statements]&amp;nbsp;break&lt;/b&gt;&lt;/span&gt;
        ///&lt;/i&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;&amp;nbsp;}&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Whe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceStatementsSwitchTermParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsSwitchTermParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:red&quot;&gt;&lt;b&gt;trace&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;expression&lt;i&gt;&amp;nbsp;[+ expression, ...], path&lt;/i&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;expression&lt;/i&gt; is any expression (property, template call, literal, etc.) that is to appear in the trace.  Can be a concatenation of multiple expressions.&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;path&lt;/i&gt; is any expression (property, template call, literal, etc.) that results in a full path file name.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Avail [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceStatementsTraceTermParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsTraceTermParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:magenta&quot;&gt;&lt;b&gt;update&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;(&lt;/b&gt;&lt;/span&gt;filePath&lt;i&gt;, fileText&lt;/i&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;:  &lt;i&gt;filePath&lt;/i&gt; is a valid &lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;property&lt;/b&gt;&lt;/span&gt;, &lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;template call&lt;/b&gt;&lt;/span&gt;, &lt;span style=&quot;color:slateblue&quot;&gt;&lt;b&gt;literal&lt;/b&gt;&lt;/span&gt;, or any math operation combination of expressions (expression1 + expression2, etc.) that yields a full path for a file.&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;:   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceStatementsUpdateTermParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsUpdateTermParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;var&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:brown&quot;&gt;&lt;b&gt;variableName&lt;/b&gt;&lt;/span&gt;&lt;i&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;&amp;nbsp;=&amp;nbsp;&lt;/b&gt;&lt;/span&gt;intialValue&lt;/i&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;variableName&lt;/i&gt; is the name of the variable, an alphanumeric string that doesn&apos;t conflict with other parameters, variables, or reserved words.&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;intialValue&lt;/i&gt; is any expression (property, template call, literal, etc.) that specifies the initial value for the variable.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceStatementsVarTermParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsVarTermParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;while (&lt;/b&gt;&lt;/span&gt;expression&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;) {&amp;nbsp;[statements]&amp;nbsp;}&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;:  &lt;i&gt;expression&lt;/i&gt; specifies a valid logical expression based on available properties, templates calls, and other functions.  Logical expressions can be combined in and (&amp;&amp;) and or (||) expressions, and nested via parentheses.&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;[statements]&lt;/i&gt; is a set of zero or more valid &lt;b&gt;Mo+&lt;/b&gt; language statements.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Availabilit [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceStatementsWhileTermParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsWhileTermParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Syntax&lt;/b&gt;: &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;with (&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;element&lt;/b&gt;&lt;/span&gt; &lt;i&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;from&lt;/b&gt;&lt;/span&gt; fromExp&lt;/i&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;) {&amp;nbsp;[statements]&amp;nbsp;}&lt;/b&gt;&lt;/span&gt;&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;element&lt;/i&gt; is a valid model element such as &lt;i&gt;Entity&lt;/i&gt; (or for spec templates a valid specification element such as &lt;i&gt;SqlTable&lt;/i&gt;).&lt;br&gt;
        ///&lt;b&gt;Where&lt;/b&gt;: &lt;i&gt;fromExp&lt;/i&gt; for an optional from clause is an element as above, a current context instance such a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceStatementsWithTermParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceStatementsWithTermParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Evaluation Tags.
        /// </summary>
        internal static string Help_LanguageReferenceTagsEvaluationHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTagsEvaluationHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Evaluation tags define an evaluation area (or scope) in a template where any number of decision making or other actions can occur.  Evaluation areas perform the &quot;heavy hitting&quot; within a template.
        ///&lt;br&gt;&lt;br&gt;
        ///An evaluation area is begun with the &lt;span style=&quot;background-color:yellow;color:gray&quot;&gt;&lt;b&gt;&lt;%%:&lt;/b&gt;&lt;/span&gt; tag, and ended with the &lt;span style=&quot;background-color:yellow;color:gray&quot;&gt;&lt;b&gt;%%&gt;&lt;/b&gt;&lt;/span&gt; tag.  Evaluation tags cannot appear within the area (or scope) of another tag.
        ///&lt;br&gt;&lt;br&gt;
        ///Evaluation tags can [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceTagsEvaluationParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTagsEvaluationParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template Tags.
        /// </summary>
        internal static string Help_LanguageReferenceTagsHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTagsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output Tags.
        /// </summary>
        internal static string Help_LanguageReferenceTagsOutputHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTagsOutputHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output tags define an area (or scope) in a template where another template&apos;s output is induced.  The template whose output is induced may output its own content, output other content, or induce the output of other templates.  The template whose output is induced makes further decision making as to if, where, when, and what to output.
        ///&lt;br&gt;&lt;br&gt;
        ///An output area is begun with the &lt;span style=&quot;background-color:yellow;color:gray&quot;&gt;&lt;b&gt;&lt;%%&gt;&lt;/b&gt;&lt;/span&gt; tag, and ended with the &lt;span style=&quot;background-color:yellow;col [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceTagsOutputParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTagsOutputParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template Tags (not to be confused with Tags in the solution model and the tag management feature) are begin and end indicators that instruct the &lt;b&gt;Mo+&lt;/b&gt; language interpreter to perform various actions.  All valid &lt;b&gt;Mo+&lt;/b&gt; language statements, properties, functions, and any other directives must be done with a tag group (begin tag and end tag combination).
        ///&lt;br&gt;&lt;br&gt;
        ///This section describes each of the valid tag types and what information can be placed within them..
        /// </summary>
        internal static string Help_LanguageReferenceTagsParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTagsParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property Tags.
        /// </summary>
        internal static string Help_LanguageReferenceTagsPropertyHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTagsPropertyHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property tags define an area (or scope) in a template where the result of an expression is to be appended to the template &lt;i&gt;Content (Text)&lt;/i&gt; or &lt;i&gt;Output (Path)&lt;/i&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A property area is begun with the &lt;span style=&quot;background-color:yellow;color:gray&quot;&gt;&lt;b&gt;&lt;%%=&lt;/b&gt;&lt;/span&gt; tag, and ended with the &lt;span style=&quot;background-color:yellow;color:gray&quot;&gt;&lt;b&gt;%%&gt;&lt;/b&gt;&lt;/span&gt; tag.  Property tags can appear outside the scope of other tags, or within the scope of evaluation tags.
        ///&lt;br&gt;&lt;br&gt;
        ///Property tags can contai [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceTagsPropertyParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTagsPropertyParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text Tags.
        /// </summary>
        internal static string Help_LanguageReferenceTagsTextHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTagsTextHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text tags define an area (or scope) in a template where raw text is to be appended to the template &lt;i&gt;Content (Text)&lt;/i&gt; or &lt;i&gt;Output (Path)&lt;/i&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A text area is begun with the &lt;span style=&quot;background-color:yellow;color:gray&quot;&gt;&lt;b&gt;&lt;%%-&lt;/b&gt;&lt;/span&gt; tag, and ended with the &lt;span style=&quot;background-color:yellow;color:gray&quot;&gt;&lt;b&gt;%%&gt;&lt;/b&gt;&lt;/span&gt; tag.  Text tags can appear outside the scope of other tags, or within the scope of evaluation tags.
        ///&lt;br&gt;&lt;br&gt;
        ///Text tags only contain &lt;span style=&quot;color:darkorange&quot;&gt;&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceTagsTextParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTagsTextParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calling Templates.
        /// </summary>
        internal static string Help_LanguageReferenceTemplatesCallingHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTemplatesCallingHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to perform more complex tasks in updating solution models or output solutions, templates often call other templates to get content or induce output.
        ///&lt;br&gt;&lt;br&gt;
        ///A code template can call another code template, or a spec template can call another spec template if the following conditions are met:
        ///&lt;ul&gt;
        ///&lt;li&gt;The calling template identifies the called template properly by name.&lt;/li&gt;
        ///
        ///&lt;li&gt;The calling template calls with a model context that matches the called template&apos;s node type.  In other words, if t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceTemplatesCallingParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTemplatesCallingParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In this example, we are following the template calls inside a &lt;i&gt;Solution&lt;/i&gt; template called &lt;span style=&quot;color:darkgreen&quot;&gt;&lt;b&gt;EntityListTest&lt;/b&gt;&lt;/span&gt;, which is the larger block of code at the top.
        ///&lt;br&gt;&lt;br&gt;
        ///All of the template calls are done for each &lt;i&gt;Entity&lt;/i&gt; in the &lt;i&gt;Solution&lt;/i&gt; within the &lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;foreach (&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:teal&quot;&gt;&lt;b&gt;Entity&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;)&lt;/b&gt;&lt;/span&gt; statement at line 5.
        ///&lt;br&gt;&lt;br&gt;
        ///At line 8, the &lt;span style=&quot;background-colo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceTemplatesCallingParagraph2 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTemplatesCallingParagraph2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code Template Workflow.
        /// </summary>
        internal static string Help_LanguageReferenceTemplatesCodeWorkflowHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTemplatesCodeWorkflowHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code templates are key in the overall model driven development workflow, as they are the building blocks used to manage output solution code, models, and other documents.
        ///&lt;br&gt;&lt;br&gt;
        ///Code templates are utilized when the output solution is updated, which is invoked when the &lt;i&gt;Update Output Solution&lt;/i&gt; on the &lt;i&gt;Solution&lt;/i&gt; node is selected and executed.
        ///&lt;br&gt;&lt;br&gt;
        ///The following diagram illustrates how code templates are utilized when the &lt;i&gt;Update Output Solution&lt;/i&gt; command for a solution is executed..
        /// </summary>
        internal static string Help_LanguageReferenceTemplatesCodeWorkflowParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTemplatesCodeWorkflowParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When the &lt;i&gt;Update Output Solution&lt;/i&gt; command for a solution is executed to update an output solution:
        ///&lt;ul&gt;
        ///&lt;li&gt;The &lt;i&gt;Code Interpreter&lt;/i&gt; is invoked.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;The template that is defined in the &lt;i&gt;TemplatePath&lt;/i&gt; property of the &lt;i&gt;Solution&lt;/i&gt; is called by the &lt;i&gt;Code Interpreter&lt;/i&gt;.  This template&apos;s output is invoked, and is called with the &lt;i&gt;Solution&lt;/i&gt; instance.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;The &lt;i&gt;Code Interpreter&lt;/i&gt; processes the &lt;b&gt;Mo+&lt;/b&gt; language statements in the &lt;i&gt;Solution&lt;/i&gt; template&apos;s &lt;i&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceTemplatesCodeWorkflowParagraph2 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTemplatesCodeWorkflowParagraph2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Templates.
        /// </summary>
        internal static string Help_LanguageReferenceTemplatesHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTemplatesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Templates are the blocks of code written in the &lt;b&gt;Mo+&lt;/b&gt; model oriented programming language, and are used to create models and solution output such as source code, models, scripts, and other documents.
        ///&lt;br&gt;&lt;br&gt;
        ///Each template is stored as a separate file, and as part of a template library can be used by more than one solution to suit your needs and promote best practices.
        ///&lt;br&gt;&lt;br&gt;
        ///This section describes templates in more detail, broken down as follows:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;Template Types&lt;/b&gt;: This section de [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceTemplatesParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTemplatesParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template Sections.
        /// </summary>
        internal static string Help_LanguageReferenceTemplatesSectionsHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTemplatesSectionsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All templates are divided into the following 3 sections:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;Configuration&lt;/b&gt;: This section determines how the template is to be called and stored on disk.  The template must have a name, which is how the template is known by other templates as well as the file name.  The node indicates what kind of node will be passed as the root model instance when the template is called.  For example, if the template is an &lt;i&gt;Entity&lt;/i&gt; template, the template will ALWAYS be called with an instance of &lt;i&gt;Entity [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceTemplatesSectionsParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTemplatesSectionsParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spec Template Workflow.
        /// </summary>
        internal static string Help_LanguageReferenceTemplatesSpecWorkflowHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTemplatesSpecWorkflowHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spec templates are the key building blocks for updating solution models in the overall model driven development workflow.
        ///&lt;br&gt;&lt;br&gt;
        ///Spec templates are utilized when the solution model is updated, which is invoked when the &lt;i&gt;Solution (Mo+ Model Doc)&lt;/i&gt; is opened, or when the &lt;i&gt;Compile Specification Source Data&lt;/i&gt; on the &lt;i&gt;Solution&lt;/i&gt; node is selected and executed.
        ///&lt;br&gt;&lt;br&gt;
        ///The following diagram illustrates how spec templates are utilized when the &lt;i&gt;Compile Specification Source Data&lt;/i&gt; command for  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceTemplatesSpecWorkflowParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTemplatesSpecWorkflowParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When the &lt;i&gt;Compile Specification Source Data&lt;/i&gt; command for a solution is executed to update a solution model:
        ///&lt;ul&gt;
        ///&lt;li&gt;The &lt;i&gt;Specification Interpreter&lt;/i&gt; is invoked.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;The &lt;i&gt;Specification Interpreter&lt;/i&gt; gets each &lt;i&gt;SpecificationSource&lt;/i&gt; (&lt;i&gt;DatabaseSource&lt;/i&gt; or &lt;i&gt;XmlSource&lt;/i&gt;) for the &lt;i&gt;Solution&lt;/i&gt; by their defined &lt;i&gt;Order&lt;/i&gt;.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;For each &lt;i&gt;SpecificationSource&lt;/i&gt; encountered:
        ///&lt;ul&gt;
        ///&lt;li&gt;The &lt;i&gt;Specification Interpreter&lt;/i&gt; loads the information from the source [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceTemplatesSpecWorkflowParagraph2 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTemplatesSpecWorkflowParagraph2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template Types.
        /// </summary>
        internal static string Help_LanguageReferenceTemplatesTypesHeader {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTemplatesTypesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are two different types of templates, each with a specific purpose within a model driven development process:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;Code Templates&lt;/b&gt;: Code Templates are designed for updating textual solution output of any kind, including source code in any language.  Code templates are required if you want to produce code or other solutions using &lt;b&gt;Mo+ Solution Builder&lt;/b&gt;.  Code template files have an extension of &lt;b&gt;.mpt&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///Some key features of code templates include:
        ///&lt;ul&gt;
        ///&lt;li&gt;Access to an [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LanguageReferenceTemplatesTypesParagraph1 {
            get {
                return ResourceManager.GetString("Help_LanguageReferenceTemplatesTypesParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mo+ Model Reference.
        /// </summary>
        internal static string Help_ModelReferenceHeader {
            get {
                return ResourceManager.GetString("Help_ModelReferenceHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An &lt;b&gt;AuditProperty&lt;/b&gt; represents a global property that may apply to all entities in the solution.  An &lt;b&gt;AuditProperty&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Solution&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///An &lt;b&gt;AuditProperty&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;PropertyID (Guid)&lt;/b&gt;: The identifier to uniquely identify the property.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;PropertyName (string)&lt;/b&gt;: The name of the property.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;IsAddAuditProperty (bool)&lt;/b&gt;: Flag, indicating if property is utilized for add operations. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementAuditPropertyParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementAuditPropertyParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;Collection&lt;/b&gt; represents a collection of an entity that is part of another entity.  A &lt;b&gt;Collection&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Entity&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;Collection&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;PropertyID (Guid)&lt;/b&gt;: The identifier to uniquely identify the property.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;CollectionName (string)&lt;/b&gt;: The name of the property.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;IsNullable (bool)&lt;/b&gt;: Flag, indicating if property can have null values.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Order (int)&lt;/b&gt;: The ord [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementCollectionParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementCollectionParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An &lt;b&gt;Entity&lt;/b&gt; represents an object that can hold all sorts of data, actions, and behaviors.  An &lt;b&gt;Entity&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Feature&lt;/b&gt;, or as a reference within a &lt;b&gt;Collection&lt;/b&gt; or &lt;b&gt;EntityReference&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///An &lt;b&gt;Entity&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;EntityID (Guid)&lt;/b&gt;: The identifier to uniquely identify the entity.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;EntityName (string)&lt;/b&gt;: The name of the entity.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;IsNullable (bool)&lt;/b&gt;: Flag, indicating if prope [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementEntityParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementEntityParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An &lt;b&gt;EntityReference&lt;/b&gt; represents a reference to an entity from another entity.  An &lt;b&gt;EntityReference&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Entity&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///An &lt;b&gt;EntityReference&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;PropertyID (Guid)&lt;/b&gt;: The identifier to uniquely identify the property.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;EntityReferenceName (string)&lt;/b&gt;: The name of the property.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;IsNullable (bool)&lt;/b&gt;: Flag, indicating if property can have null values.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Order (int)&lt;/ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementEntityReferenceParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementEntityReferenceParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An &lt;b&gt;Enumeration&lt;/b&gt; represents a collection of expected values, used for custom model structures.  An &lt;b&gt;Enumeration&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Model&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///An &lt;b&gt;Enumeration&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;EnumerationID (Guid)&lt;/b&gt;: The identifier to uniquely identify the enumeration.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;EnumerationName (string)&lt;/b&gt;: The name of the enumeration.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Description (string)&lt;/b&gt;: The description of the enumeration.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;ModelID (Gui [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementEnumerationParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementEnumerationParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;Feature&lt;/b&gt; represents a logical grouping of related entities.  A &lt;b&gt;Feature&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Solution&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;Feature&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;FeatureID (Guid)&lt;/b&gt;: The identifier to uniquely identify the feature.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;FeatureName (string)&lt;/b&gt;: The name of the feature.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Description (string)&lt;/b&gt;: The description of the feature.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;SolutionID (Guid)&lt;/b&gt;: (or Solution) The identifier of the parent solut [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementFeatureParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementFeatureParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An &lt;b&gt;Index&lt;/b&gt; represents a grouping of properties within an entity that need to be accessed efficiently.  An &lt;b&gt;Index&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Entity&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///An &lt;b&gt;Index&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;IndexID (Guid)&lt;/b&gt;: The identifier to uniquely identify the index.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;IndexName (string)&lt;/b&gt;: The name of the index.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;IsPrimaryKeyIndex (bool)&lt;/b&gt;: Flag indicating if index is the primary key.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;IsUniqueIndex (bool)&lt;/b&gt;: F [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementIndexParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementIndexParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An &lt;b&gt;IndexProperty&lt;/b&gt; represents a property within the entity that is part of an index.  An &lt;b&gt;IndexProperty&lt;/b&gt; is found in a collection as a child of Index.
        ///&lt;br&gt;&lt;br&gt;
        ///An &lt;b&gt;IndexProperty&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;IndexPropertyID (Guid)&lt;/b&gt;: The identifier to uniquely identify the index property.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;PropertyID (Guid)&lt;/b&gt;: (or Property) The identifier of the property within the entity.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Order (int)&lt;/b&gt;: The order of the property within the index.&lt;/li&gt;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementIndexPropertyParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementIndexPropertyParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;Method&lt;/b&gt; represents a procedure or action that can be done relating to an entity.  A &lt;b&gt;Method&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Entity&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;Method&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;MethodID (Guid)&lt;/b&gt;: The identifier to uniquely identify the method.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;MethodName (string)&lt;/b&gt;: The name of the method.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;MethodTypeCode (int)&lt;/b&gt;: (or MethodTypeName) The type of the method relating to what kind of action it performs, based on input  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementMethodParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementMethodParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;MethodRelationship&lt;/b&gt; represents a link to a relationship, if the method action is based on data found in a relationship with the method&apos;s entity.  For example, this is used to construct join clauses for the method in relational database procedures.  A &lt;b&gt;MethodRelationship&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Method&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;MethodRelationship&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;MethodRelationshipID (Guid)&lt;/b&gt;: The identifier to uniquely identify the method re [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementMethodRelationshipParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementMethodRelationshipParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;ModelObject&lt;/b&gt; represents a user defined custom object that is used within a custom solution model.  A &lt;b&gt;ModelObject&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Model&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;ModelObject&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;ModelObjectID (Guid)&lt;/b&gt;: The identifier to uniquely identify the model object.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;ModelObjectName (string)&lt;/b&gt;: The name of the model object.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;ParentModelObjectID (Guid)&lt;/b&gt;: The identifier of the parent model object, if thi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementModelObjectParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementModelObjectParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;Model&lt;/b&gt; represents a user defined custom solution model structure and data that is used in conjunction with or instead of implicit model elements such as &lt;b&gt;Entity&lt;/b&gt;, &lt;b&gt;Relationship&lt;/b&gt;, and &lt;b&gt;Property&lt;/b&gt;.  In fact, with a &lt;b&gt;Model&lt;/b&gt; and its underlying elements, users can define ANY hierarchical model structure as a basis for managing code, model, or document solutions.  A &lt;b&gt;Model&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Solution&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;Model&lt;/b&gt; consists of the following p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementModelParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementModelParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;ModelProperty&lt;/b&gt; represents a user defined custom property that describes a custom model object.  A &lt;b&gt;ModelProperty&lt;/b&gt; is found in a collection as a child of &lt;b&gt;ModelObject&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;ModelProperty&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;ModelPropertyID (Guid)&lt;/b&gt; The identifier to uniquely identify the model property.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;ModelPropertyName (string)&lt;/b&gt; The name of the model property.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;DefinedByModelObjectID (Guid)&lt;/b&gt; The identifier of the model object [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementModelPropertyParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementModelPropertyParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An &lt;b&gt;ObjectInstance&lt;/b&gt; represents a populated instance of a user defined custom object.  An &lt;b&gt;ObjectInstance&lt;/b&gt; is found in a collection as a child of &lt;b&gt;ModelObject&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///An &lt;b&gt;ObjectInstance&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;ObjectInstanceID (Guid)&lt;/b&gt; The identifier to uniquely identify the object instance.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;ParentObjectInstanceID (Guid)&lt;/b&gt; The identifier of the parent object instance, if this object instance is a child of another.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Description [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementObjectInstanceParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementObjectInstanceParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;Parameter&lt;/b&gt; represents a piece of data that is passed to a method call.  A &lt;b&gt;Parameter&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Method&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;Parameter&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;ParameterID (Guid)&lt;/b&gt;: The identifier to uniquely identify the parameter.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;ParameterName (string)&lt;/b&gt;: The name of the parameter.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Order (int)&lt;/b&gt;: The order in which the parameter should appear with respect to others.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;ReferencedEntityID ( [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementParameterParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementParameterParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;Project&lt;/b&gt; represents a portion of a software or document solution.  For example, a project in a software solution might represent a particular platform and tier within that solution such as an ASP.Net web service layer.  A &lt;b&gt;Project&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Solution&lt;/b&gt; or &lt;b&gt;Project&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;Project&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;ProjectID (Guid)&lt;/b&gt;: The identifier to uniquely identify the project.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;ProjectName (string)&lt;/b&gt;: The [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementProjectParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementProjectParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;PropertyInstance&lt;/b&gt; represents a populated property of an property instance for a user defined model object.  A &lt;b&gt;PropertyInstance&lt;/b&gt; is found in a collection as a child of &lt;b&gt;ObjectInstance&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;PropertyInstance&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;PropertyInstanceID (Guid)&lt;/b&gt;: The identifier to uniquely identify the property instance.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;ParentPropertyInstanceID (Guid)&lt;/b&gt;: The identifier of the parent property instance, if this property instance is a  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementPropertyInstanceParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementPropertyInstanceParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;Property&lt;/b&gt; represents a value that describes an entity.  A &lt;b&gt;Property&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Entity&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;Property&lt;/b&gt;  consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;PropertyID (Guid)&lt;/b&gt;: The identifier to uniquely identify the property.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;PropertyName (string)&lt;/b&gt;: The name of the property.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;IsPrimaryKeyMember (bool)&lt;/b&gt;: Flag, indicating if property is part of the primary key.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;IsForeignKeyMember (bool)&lt;/b&gt;: Flag, indi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementPropertyParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementPropertyParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;PropertyReference&lt;/b&gt; represents a reference to a property from another entity.  A &lt;b&gt;PropertyReference&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Entity&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;PropertyReference&lt;/b&gt;  consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;PropertyID (Guid)&lt;/b&gt;: The identifier to uniquely identify the property.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;PropertyReferenceName (string)&lt;/b&gt;: The name of the property.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;IsNullable (bool)&lt;/b&gt;: Flag, indicating if property can have null values.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Order  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementPropertyReferenceParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementPropertyReferenceParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;PropertyRelationship&lt;/b&gt; represents a link to a relationship, if the property data is to be found via a relationship with the property&apos;s entity.  For example, this is used to construct join clauses for the property in relational database procedures.  A &lt;b&gt;PropertyRelationship&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Collection&lt;/b&gt;, &lt;b&gt;EntityReference&lt;/b&gt;, or &lt;b&gt;PropertyReference&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;PropertyRelationship&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;PropertyRelationshipID [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementPropertyRelationshipParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementPropertyRelationshipParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;Relationship&lt;/b&gt; represents a connection between two entities.  A &lt;b&gt;Relationship&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Entity&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;Relationship&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;RelationshipID (Guid)&lt;/b&gt;: The identifier to uniquely identify the relationship.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;RelationshipName (string)&lt;/b&gt;: The name of the relationship.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;IsNullable (bool)&lt;/b&gt;: Flag indicating if property values in relationship are required.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;ItemsMin (int [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementRelationshipParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementRelationshipParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;RelationshipProperty&lt;/b&gt; represents a property within the entity that is part of a relationship.  A &lt;b&gt;RelationshipProperty&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Relationship&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;RelationshipProperty&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;RelationshipPropertyID (Guid)&lt;/b&gt;: The identifier to uniquely identify the relationship property.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;PropertyID (Guid)&lt;/b&gt;: (or Property) The identifier of the property within the relationship parent entity.&lt;/li&gt;
        ///&lt;l [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementRelationshipPropertyParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementRelationshipPropertyParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model Elements.
        /// </summary>
        internal static string Help_ModelReferenceModelElementsHeader {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;Solution&lt;/b&gt; is the top level element that contains all of the information for a solution model.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;Solution&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;SolutionID (Guid)&lt;/b&gt;: The identifier to uniquely identify the solution.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;SolutionName (string)&lt;/b&gt;: The name of the solution.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Namespace (string)&lt;/b&gt;: The namespace of the solution, if applicable for a software solution.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;OutputSolutionFileName (string)&lt;/b&gt;: The name of the output solution f [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementSolutionParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementSolutionParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This section describes the structure of a &lt;b&gt;Mo+&lt;/b&gt; model, including all of its elements or nodes, and corresponding properties.  The diagram below illustrates the primary parent/child structure of the model elements accessible via the &lt;b&gt;Mo+&lt;/b&gt; language.  The &lt;i&gt;Solution&lt;/i&gt; is the top level element.  Arrows point to child elements that can be found as collections under the parent..
        /// </summary>
        internal static string Help_ModelReferenceModelElementsParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementsParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In addition to understanding the model structure that appears in the tree view and the documents being edited in the designer, it is essential to know the formal names for each type of element and corresponding properties, as these are used in the &lt;b&gt;Mo+&lt;/b&gt; programming language.
        ///&lt;br&gt;&lt;br&gt;
        ///The sections below are organized by the name of each type of element or node in the model structure, and contains details about that node and the properties within..
        /// </summary>
        internal static string Help_ModelReferenceModelElementsParagraph2 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementsParagraph2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;Stage&lt;/b&gt; represents a grouping of activity within a workflow.  A &lt;b&gt;Stage&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Workflow&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;Stage&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;StageID (Guid)&lt;/b&gt;: The identifier to uniquely identify the stage.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;StageName (string)&lt;/b&gt;: The name of the stage.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Order (int)&lt;/b&gt;: The order of the stage within the workflow.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Description (string)&lt;/b&gt;: The description of the stage.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;WorkflowID  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementStageParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementStageParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;StageTransition&lt;/b&gt; represents a movement or change from one stage to another.  A &lt;b&gt;StageTransition&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Stage&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;StageTransition&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;StageTransitionID (Guid)&lt;/b&gt;: The identifier to uniquely identify the stage transition.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;StageTransitionName (string)&lt;/b&gt;: The name of the stage transition.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Description (string)&lt;/b&gt;: The description of the stage transition.&lt;/li&gt;
        ///&lt;li&gt;&lt;b [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementStageTransitionParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementStageTransitionParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;StateModel&lt;/b&gt; represents a lifecycle of activity and status within an entity. A &lt;b&gt;StateModel&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Entity&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;StateModel&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;StateModelID (Guid)&lt;/b&gt;: The identifier to uniquely identify the state model.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;StateModelName (string)&lt;/b&gt;: The name of the state model.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Description (string)&lt;/b&gt;: The description of the state model.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;EntityID (Guid)&lt;/b&gt;: (or Entity) T [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementStateModelParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementStateModelParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;State&lt;/b&gt; represents a particular status and associated activity within a state model. A &lt;b&gt;State&lt;/b&gt; is found in a collection as a child of &lt;b&gt;StateModel&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;State&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;StateID (Guid)&lt;/b&gt;: The identifier to uniquely identify the state.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;StateName (string)&lt;/b&gt;: The name of the state.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Order (int)&lt;/b&gt;: The order of the state within the state model.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Description (string)&lt;/b&gt;: The description of the sta [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementStateParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementStateParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;StateTransition&lt;/b&gt; represents a movement or change from one state to another.  A &lt;b&gt;StateTransition&lt;/b&gt; is found in a collection as a child of &lt;b&gt;State&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;StateTransition&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;StateTransitionID (Guid)&lt;/b&gt;: The identifier to uniquely identify the state transition.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;StateTransitionName (string)&lt;/b&gt;: The name of the state transition.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Description (string)&lt;/b&gt;: The description of the state transition.&lt;/li&gt;
        ///&lt;li&gt;&lt;b [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementStateTransitionParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementStateTransitionParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;Step&lt;/b&gt; represents a grouping of activity within a stage.  A &lt;b&gt;Step&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Stage&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;Step&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;StepID (Guid)&lt;/b&gt;: The identifier to uniquely identify the step.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;StepName (string)&lt;/b&gt;: The name of the step.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Order (int)&lt;/b&gt;: The order of the step within the stage.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Description (string)&lt;/b&gt;: The description of the step.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;StageID (Guid)&lt;/b&gt;: (or Stage [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementStepParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementStepParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;StepTransition&lt;/b&gt; represents a movement or change from one step to another.  A &lt;b&gt;StepTransition&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Step&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;StepTransition&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;StepTransitionID (Guid)&lt;/b&gt;: The identifier to uniquely identify the step transition.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;StepTransitionName (string)&lt;/b&gt;: The name of the step transition.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Description (string)&lt;/b&gt;: The description of the step transition.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;FromStepI [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementStepTransitionParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementStepTransitionParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;Tag&lt;/b&gt; (not to be confused with template tags) represents a way to mark an element in the solution model.  Any model element can contain a collection of tags.
        ///&lt;br&gt;&lt;br&gt;
        ///Tags are probably the most flexible way to determine if and how to update your generated documents.  Tags can be used to determine whether to generate files.  Tags can be used to determine differences in how files should be generated based on exceptions or other conditions.  Tags can be used in expressions for any other kind of decisi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementTagParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementTagParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;Value&lt;/b&gt; represents a valid value for an enumeration.  A &lt;b&gt;Value&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Enumeration&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;Value&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;ValueID (Guid)&lt;/b&gt;: The identifier to uniquely identify the value.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;ValueName (string)&lt;/b&gt;: The name of the value.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Order (int)&lt;/b&gt;: The order of the value in the set of values for the enumeration.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Description (string)&lt;/b&gt;: The description of the value.&lt;/li&gt;
        ///&lt;l [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementValueParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementValueParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;View&lt;/b&gt; represents a collection of properties for a larger purpose in the domain.  A &lt;b&gt;View&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Solution&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;View&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;ViewID (Guid)&lt;/b&gt;: The identifier to uniquely identify the view.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;ViewName (string)&lt;/b&gt;: The name of the view.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Description (string)&lt;/b&gt;: The description of the view.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;SolutionID (Guid)&lt;/b&gt;: (or Solution) The identifier of the parent soluti [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementViewParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementViewParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;ViewProperty&lt;/b&gt; represents a property within a view.  A &lt;b&gt;ViewProperty&lt;/b&gt; is found in a collection as a child of &lt;b&gt;View&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;ViewProperty&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;ViewPropertyID (Guid)&lt;/b&gt;: The identifier to uniquely identify the view property.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Order (int)&lt;/b&gt;: The order of the property within the view.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Description (string)&lt;/b&gt;: The description of the view property.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;ViewID (Guid)&lt;/b&gt;: (or View) The identifier of t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementViewPropertyParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementViewPropertyParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;Workflow&lt;/b&gt; represents a lifecycle of activity and status within a solution. A &lt;b&gt;Workflow&lt;/b&gt; is found in a collection as a child of &lt;b&gt;Solution&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;Workflow&lt;/b&gt; consists of the following properties:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;WorkflowID (Guid)&lt;/b&gt;: The identifier to uniquely identify the workflow.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;WorkflowName (string)&lt;/b&gt;: The name of the workflow.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Description (string)&lt;/b&gt;: The description of the workflow.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;SolutionID (Guid)&lt;/b&gt;: (or Solution) The identifie [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceModelElementWorkflowParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceModelElementWorkflowParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &lt;b&gt;Mo+&lt;/b&gt; model oriented programming language has at its heart the ability to walk through model data and specification source data to perform a wide variety of tasks.
        ///&lt;br&gt;&lt;br&gt;
        ///Model elements are the objects and properties that comprise the overall structure of the solution model, and these elements are recognized by &lt;b&gt;Mo+&lt;/b&gt; both to build models and generate code.  The user can view and edit instances of these elements in the solution model.
        ///&lt;br&gt;&lt;br&gt;
        ///Spec elements are the objects and properties  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specification Elements.
        /// </summary>
        internal static string Help_ModelReferenceSpecElementsHeader {
            get {
                return ResourceManager.GetString("Help_ModelReferenceSpecElementsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This section describes the structure of specification elements that are utilized when reading information from specification sources.  The diagram below illustrates the primary parent/child structure of the specification elements accessible via the &lt;b&gt;Mo+&lt;/b&gt; language.  The &lt;i&gt;SqlDatabase&lt;/i&gt; and &lt;i&gt;XmlDocument&lt;/i&gt; are top level elements.  Arrows point to child elements that can be found as collections under the parent..
        /// </summary>
        internal static string Help_ModelReferenceSpecElementsParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceSpecElementsParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Mo+ Solution Builder&lt;/b&gt; will load actual database or xml specification source data into these elements.  Then, &lt;b&gt;Mo+&lt;/b&gt; spec templates will be able to utilize the data in this structure to create and update solution models.
        ///&lt;br&gt;&lt;br&gt;
        ///The sections below are organized by the name of each type of element or node in the specification structure, and contains details about that node and the properties within..
        /// </summary>
        internal static string Help_ModelReferenceSpecElementsParagraph2 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceSpecElementsParagraph2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;SpecificationSource&lt;/b&gt; represents information on an external source of specification information to be loaded into the solution model.  A &lt;b&gt;SpecificationSource&lt;/b&gt; can be a &lt;b&gt;DatabaseSource&lt;/b&gt; or an &lt;b&gt;XmlSource&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///As most of the information within a &lt;b&gt;SpecificationSource&lt;/b&gt; is used internally by &lt;b&gt;Mo+ Solution Builder&lt;/b&gt; to load information into a platform independent format, most of the properties are not available via the Mo+ programming language.  The following properties are a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceSpecElementSpecificationSourceParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceSpecElementSpecificationSourceParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;SqlColumn&lt;/b&gt; represents information found in a column of a source database table.  A &lt;b&gt;SqlColumn&lt;/b&gt; is found in a collection as a child of &lt;b&gt;SqlTable&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;SqlColumn&lt;/b&gt; consists of the following properties (values other than internal IDs are as found in the database):
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;SqlColumnID (Guid)&lt;/b&gt;: The identifier to uniquely identify the sql column.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;SqlColumnName (string)&lt;/b&gt;: The name of the sql column.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;DataType (string)&lt;/b&gt;: The data type of the sq [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceSpecElementSqlColumnParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceSpecElementSqlColumnParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;SqlDatabase&lt;/b&gt; represents all of the information that is loaded from a source database by &lt;b&gt;Mo+ SolutionBuilder&lt;/b&gt; from a &lt;b&gt;DatabaseSource&lt;/b&gt;.  A &lt;b&gt;SqlDatabase&lt;/b&gt; is the top level element for database specification information.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;SqlDatabase&lt;/b&gt; consists of the following properties (values other than internal IDs are as found in the database):
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;SqlDatabaseID (Guid)&lt;/b&gt;: The identifier to uniquely identify the sql database.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;SqlDatabaseName (string)&lt;/b&gt;: The [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceSpecElementSqlDatabaseParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceSpecElementSqlDatabaseParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;SqlExtendedProperty&lt;/b&gt; represents extended property information that may be available in source database elements.  A &lt;b&gt;SqlExtendedProperty&lt;/b&gt; may be found within most any other Sql elements.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;SqlExtendedProperty&lt;/b&gt; consists of the following properties (values other than internal IDs are as found in the database):
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;SqlExtendedPropertyID (Guid)&lt;/b&gt;: The identifier to uniquely identify the sql extended property.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;SqlExtendedPropertyName (string)&lt;/b&gt;: The name o [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceSpecElementSqlExtendedPropertyParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceSpecElementSqlExtendedPropertyParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;SqlForeignKeyColumn&lt;/b&gt; represents information found in a foreign key column of a foreign key in a source database.  A &lt;b&gt;SqlForeignKeyColumn&lt;/b&gt; is found in a collection as a child of &lt;b&gt;SqlForeignKey&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;SqlForeignKeyColumn&lt;/b&gt; consists of the following properties (values other than internal IDs are as found in the database):
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;SqlForeignKeyColumnID (Guid)&lt;/b&gt;: The identifier to uniquely identify the sql foreign key column.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;SqlForeignKeyColumnName (string)&lt;/b [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceSpecElementSqlForeignKeyColumnParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceSpecElementSqlForeignKeyColumnParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;SqlForeignKey&lt;/b&gt; represents information found in a foreign key of a database table.  A &lt;b&gt;SqlForeignKey&lt;/b&gt; is found in a collection as a child of &lt;b&gt;SqlTable&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;SqlForeignKey&lt;/b&gt; consists of the following properties (values other than internal IDs are as found in the database):
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;SqlForeignKeyID (Guid)&lt;/b&gt;: The identifier to uniquely identify the sql foreign key.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;SqlForeignKeyName (string)&lt;/b&gt;: The name of the sql foreign key.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;DbID (int)&lt;/b&gt;: Th [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceSpecElementSqlForeignKeyParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceSpecElementSqlForeignKeyParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;SqlIndexedColumn&lt;/b&gt; represents information found in a indexed column of an index in a source database.  A &lt;b&gt;SqlIndexedColumn&lt;/b&gt; is found in a collection as a child of &lt;b&gt;SqlIndex&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;SqlIndexedColumn&lt;/b&gt; consists of the following properties (values other than internal IDs are as found in the database):
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;SqlIndexedColumnID (Guid)&lt;/b&gt;: The identifier to uniquely identify the sql indexed column.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;SqlIndexedColumnName (string)&lt;/b&gt;: The name of the sql indexed co [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceSpecElementSqlIndexedColumnParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceSpecElementSqlIndexedColumnParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;SqlIndex&lt;/b&gt; represents information found in a index of a database table.  A &lt;b&gt;SqlIndex&lt;/b&gt; is found in a collection as a child of &lt;b&gt;SqlTable&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;SqlIndex&lt;/b&gt; consists of the following properties (values other than internal IDs are as found in the database):
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;SqlIndexID (Guid)&lt;/b&gt;: The identifier to uniquely identify the sql index.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;SqlIndexName (string)&lt;/b&gt;: The name of the sql index.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;DbID (int)&lt;/b&gt;: The external identifier of the sql index.&lt;/li [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceSpecElementSqlIndexParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceSpecElementSqlIndexParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;SqlProperty&lt;/b&gt; represents additional property information that may be available in source database elements.  A &lt;b&gt;SqlProperty&lt;/b&gt; may be found within most any other Sql elements.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;SqlProperty&lt;/b&gt; consists of the following properties (values other than internal IDs are as found in the database):
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;SqlPropertyID (Guid)&lt;/b&gt;: The identifier to uniquely identify the sql property.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;SqlPropertyName (string)&lt;/b&gt;: The name of the sql property.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;SqlType (strin [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceSpecElementSqlPropertyParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceSpecElementSqlPropertyParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;SqlTable&lt;/b&gt; represents information found in a source database table.  A &lt;b&gt;SqlTable&lt;/b&gt; is found in a collection as a child of &lt;b&gt;SqlDatabase&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;SqlTable&lt;/b&gt; consists of the following properties (values other than internal IDs are as found in the database):
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;SqlTableID (Guid)&lt;/b&gt;: The identifier to uniquely identify the sql table.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;SqlTableName (string)&lt;/b&gt;: The name of the sql table.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;DbID (int)&lt;/b&gt;: The external identifier of the sql table.&lt;/li&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceSpecElementSqlTableParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceSpecElementSqlTableParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;SqlView&lt;/b&gt; represents information found in a database view.  A &lt;b&gt;SqlView&lt;/b&gt; is found in a collection as a child of &lt;b&gt;SqlDatabase&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;SqlView&lt;/b&gt; consists of the following properties (values other than internal IDs are as found in the database):
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;SqlViewID (Guid)&lt;/b&gt;: The identifier to uniquely identify the sql view.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;SqlViewName (string)&lt;/b&gt;: The name of the sql view.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;DbID (int)&lt;/b&gt;: The external identifier of the sql view.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;CreateD [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceSpecElementSqlViewParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceSpecElementSqlViewParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;SqlViewProperty&lt;/b&gt; represents information found in a database view property.  A &lt;b&gt;SqlViewProperty&lt;/b&gt; is found in a collection as a child of &lt;b&gt;SqlView&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;SqlViewProperty&lt;/b&gt; consists of the following properties (values other than internal IDs are as found in the database):
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;SqlViewPropertyID (Guid)&lt;/b&gt;: The identifier to uniquely identify the sql view property.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;ReferencedTable (string)&lt;/b&gt;: The name of the table corresponding to the property.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceSpecElementSqlViewPropertyParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceSpecElementSqlViewPropertyParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An &lt;b&gt;XmlAttribute&lt;/b&gt; represents information found in an attribute in a source xml file.  An &lt;b&gt;XmlAttribute&lt;/b&gt; is found in a collection as a child of &lt;b&gt;XmlDocument&lt;/b&gt; or &lt;b&gt;XmlNode&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;XmlAttribute&lt;/b&gt; consists of the following properties (values other than internal IDs are as found in the database):
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;XmlAttributeID (Guid)&lt;/b&gt;: The identifier to uniquely identify the xml attribute.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;XmlAttributeName (string)&lt;/b&gt;: The name of the xml attribute.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;Loca [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceSpecElementXmlAttributeParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceSpecElementXmlAttributeParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An &lt;b&gt;XmlDocument&lt;/b&gt; represents information found in a source xml file, as loaded by &lt;b&gt;Mo+ Solution Builder&lt;/b&gt; from an &lt;b&gt;XmlSource&lt;/b&gt;.  An &lt;b&gt;XmlDocument&lt;/b&gt; is the top level node for an xml source.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;XmlDocument&lt;/b&gt; consists of the following properties (values other than internal IDs are as found in the database):
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;XmlDocumentID (Guid)&lt;/b&gt;: The identifier to uniquely identify the xml document.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;XmlDocumentName (string)&lt;/b&gt;: The name of the xml document.&lt;/li&gt;
        ///&lt;li [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceSpecElementXmlDocumentParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceSpecElementXmlDocumentParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An &lt;b&gt;XmlNode&lt;/b&gt; represents information found in a node in a source xml file.  An &lt;b&gt;XmlNode&lt;/b&gt; is found in a collection as a child of &lt;b&gt;XmlDocument&lt;/b&gt; or &lt;b&gt;XmlNode&lt;/b&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///A &lt;b&gt;XmlNode&lt;/b&gt; consists of the following properties (values other than internal IDs are as found in the database):
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;XmlNodeID (Guid)&lt;/b&gt;: The identifier to uniquely identify the xml node.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;XmlNodeName (string)&lt;/b&gt;: The name of the xml node.&lt;/li&gt;
        ///&lt;li&gt;&lt;b&gt;LocalName (string)&lt;/b&gt;: The local name of the [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ModelReferenceSpecElementXmlNodeParagraph1 {
            get {
                return ResourceManager.GetString("Help_ModelReferenceSpecElementXmlNodeParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show.
        /// </summary>
        internal static string Help_Show {
            get {
                return ResourceManager.GetString("Help_Show", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About Mo+ Solution Builder.
        /// </summary>
        internal static string Help_StartupAboutMoPlusSolutionBuildeHeader {
            get {
                return ResourceManager.GetString("Help_StartupAboutMoPlusSolutionBuildeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Mo+&lt;/b&gt; is a model oriented programming language, geared towards managing models, documents, and source code in any language.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;b&gt;Mo+ Solution Builder&lt;/b&gt; is a development environment (IDE) that utilizes &lt;b&gt;Mo+&lt;/b&gt;, and is used for building models and generating code and other documents in a model driven development process.
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;i&gt;Copyright (C) 2013&lt;/i&gt; Dave Clemmer, Intelligent Coding Solutions, LLC
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;i&gt;Mo+&lt;/i&gt; is a registered trademark of Intelligent Coding Solutions, LLC.
        /// </summary>
        internal static string Help_StartupAboutMoPlusSolutionBuilderParagraph1 {
            get {
                return ResourceManager.GetString("Help_StartupAboutMoPlusSolutionBuilderParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Frequently Asked Questions.
        /// </summary>
        internal static string Help_StartupFAQHeader {
            get {
                return ResourceManager.GetString("Help_StartupFAQHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Following are some frequently asked questions about using &lt;b&gt;Mo+ Solution Builder&lt;/b&gt; and programming in the &lt;b&gt;Mo+&lt;/b&gt; model oriented programming language.
        ///&lt;br&gt;&lt;br&gt;
        ///Additional qestions can be found on the source code download site &lt;a href=&quot;MoPlus.CodePlex.com&quot;&gt;MoPlus.CodePlex.com&lt;/a&gt;, and on the &lt;b&gt;Mo+&lt;/b&gt; membership site &lt;a href=&quot;ModelOrientedPlus.com&quot;&gt;ModelOrientedPlus.com&lt;/a&gt;.  You can ask questions in either of these sites as well as on &lt;a href=&quot;stackoverflow.com&quot;&gt;stackoverflow.com&lt;/a&gt; (using the Mo+ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_StartupFAQParagraph1 {
            get {
                return ResourceManager.GetString("Help_StartupFAQParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How can I deal with complex or inefficient templates?.
        /// </summary>
        internal static string Help_StartupFAQTemplatesHeader {
            get {
                return ResourceManager.GetString("Help_StartupFAQTemplatesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Mo+ Solution Builder&lt;/b&gt; can create and maintain large, complex solutions utilizing spec and code templates written in the &lt;b&gt;Mo+&lt;/b&gt; model oriented programming language.  Sometimes, as the set of templates grows to meet the needs for the solution, the templates may seem to be a bit hard to manage, being either too complex or inefficient.  If you are creating a new template library, it&apos;s always good to start simple, generating simpler things, then adding complexity.
        ///&lt;br&gt;&lt;br&gt;
        ///Here are some things to loo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_StartupFAQTemplatesParagraph1 {
            get {
                return ResourceManager.GetString("Help_StartupFAQTemplatesParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting Started.
        /// </summary>
        internal static string Help_StartupHeader {
            get {
                return ResourceManager.GetString("Help_StartupHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Mo+ Solution Builder&lt;/b&gt; is a model oriented programming language and IDE, used for building models and generating code and other documents in a model oriented development process..
        /// </summary>
        internal static string Help_StartupParagraph1 {
            get {
                return ResourceManager.GetString("Help_StartupParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user interface consists of 2 main windows.  The solution builder window shows all of your solution and help data in a tree view format.  It is from this window that you perform actions such as creating models, generating code, and selecting documents to view or edit.  The solution designer window (this window) allows you to view and edit documents such as model nodes and templates..
        /// </summary>
        internal static string Help_StartupParagraph2 {
            get {
                return ResourceManager.GetString("Help_StartupParagraph2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To begin, right click on the &lt;i&gt;Solutions&lt;/i&gt; node in the Solution Builder window, and open an existing solution or create a new one.  You can create and edit model nodes by hand, or if you set up one or more specification sources, you can have your model created from information in a database or xml file.  Once you have a model, you can start managing your code, model, and/or document solution.
        ///&lt;br&gt;&lt;br&gt;
        ///To get started quickly:
        ///&lt;ol&gt;
        ///&lt;li&gt;Download one or more getting started packs (see Template Libraries  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_StartupParagraph3 {
            get {
                return ResourceManager.GetString("Help_StartupParagraph3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template Libraries and Other Resources.
        /// </summary>
        internal static string Help_StartupResourcesHeader {
            get {
                return ResourceManager.GetString("Help_StartupResourcesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligent Coding Solutions is dedicated to improving the effectiveness of model driven development, and to get as much community input towards this end.
        ///&lt;br&gt;&lt;br&gt;
        ///One primary goal is to create and build upon template libraries and other resources for various platforms that represent ongoing best practices from the &lt;b&gt;Mo+&lt;/b&gt; user community, and to make these available to the community at large.
        ///&lt;br&gt;&lt;br&gt;
        ///Visit &lt;a href=&quot;ModelOrientedPlus.com&quot;&gt;ModelOrientedPlus.com&lt;/a&gt;, and become a member to give greater [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_StartupResourcesParagraph1 {
            get {
                return ResourceManager.GetString("Help_StartupResourcesParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tutorials.
        /// </summary>
        internal static string Help_StartupTutorialHeader {
            get {
                return ResourceManager.GetString("Help_StartupTutorialHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tutorials for the &lt;b&gt;Mo+ Solution Builder&lt;/b&gt; and programming with &lt;b&gt;Mo+&lt;/b&gt; can be found on the source code download site &lt;a href=&quot;MoPlus.CodePlex.com&quot;&gt;MoPlus.CodePlex.com&lt;/a&gt;, and at the &lt;b&gt;Mo+&lt;/b&gt; membership site &lt;a href=&quot;ModelOrientedPlus.com&quot;&gt;ModelOrientedPlus.com&lt;/a&gt;.
        ///&lt;br&gt;&lt;br&gt;
        ///The tutorials will visually walk the user through various features.  Lower numbered tutorials cover simpler getting started topics, while higher numbered tutorials delve into deeper features and capabilities..
        /// </summary>
        internal static string Help_StartupTutorialParagraph1 {
            get {
                return ResourceManager.GetString("Help_StartupTutorialParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What is Mo+?.
        /// </summary>
        internal static string Help_StartupWhatIsMoPlusHeader {
            get {
                return ResourceManager.GetString("Help_StartupWhatIsMoPlusHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What is a Mo+ Model?.
        /// </summary>
        internal static string Help_StartupWhatIsMoPlusModelHeader {
            get {
                return ResourceManager.GetString("Help_StartupWhatIsMoPlusModelHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &lt;b&gt;Mo+&lt;/b&gt; model is a simple platform independent, tier independent representation of a system or solution that users desire to create code or some other kind of output for..
        /// </summary>
        internal static string Help_StartupWhatIsMoPlusModelParagraph1 {
            get {
                return ResourceManager.GetString("Help_StartupWhatIsMoPlusModelParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The model structure contains elements or nodes such as projects, features, entities, properties, relationships, and other details that specify how the model should be built or how solution output should be built.  The model structure can also contain user defined elements or nodes.
        ///&lt;br&gt;&lt;br&gt;
        ///The model structure is populated with data, such as particular entities, properties, and relationships.  This model data appears in the tree view in the Solution Builder, organized by the nodes in the model structure.        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_StartupWhatIsMoPlusModelParagraph2 {
            get {
                return ResourceManager.GetString("Help_StartupWhatIsMoPlusModelParagraph2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Mo+&lt;/b&gt; is short for &lt;b&gt;Model Oriented Plus&lt;/b&gt;, and is the model oriented programming language that gives users the ability to perform a wide variety of tasks such as creating models, documents, and source code in any language.  The language has some similarities to C# or Java, but has features geared towards creating models, walking through model data, and generating code..
        /// </summary>
        internal static string Help_StartupWhatIsMoPlusParagraph1 {
            get {
                return ResourceManager.GetString("Help_StartupWhatIsMoPlusParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What is Mo+ Solution Builder?.
        /// </summary>
        internal static string Help_StartupWhatIsMoPlusSolutionBuildeHeader {
            get {
                return ResourceManager.GetString("Help_StartupWhatIsMoPlusSolutionBuildeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Mo+ Solution Builder&lt;/b&gt; is the environment (IDE) that gives users the ability to view and edit &lt;b&gt;Mo+&lt;/b&gt; models, view, edit, and debug &lt;b&gt;Mo+&lt;/b&gt; templates, and to initiate tasks to update models and output..
        /// </summary>
        internal static string Help_StartupWhatIsMoPlusSolutionBuilderParagraph1 {
            get {
                return ResourceManager.GetString("Help_StartupWhatIsMoPlusSolutionBuilderParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To view and edit models, users can open up any model item presented in a tree view format to view and edit details of that item, or create new items.  Users can also create and edit diagrams which show a graphical view of portions of the model.  Users can edit model items through the diagrams as well.
        ///&lt;br&gt;&lt;br&gt;
        ///To view and edit templates written in &lt;b&gt;Mo+&lt;/b&gt;, users can open up any template presented in the tree view format to edit that template, or create new templates.  Templates can be debugged by runni [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_StartupWhatIsMoPlusSolutionBuilderParagraph2 {
            get {
                return ResourceManager.GetString("Help_StartupWhatIsMoPlusSolutionBuilderParagraph2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Working with Templates.
        /// </summary>
        internal static string Help_StartupWorkingWithTemplatesHeader {
            get {
                return ResourceManager.GetString("Help_StartupWorkingWithTemplatesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Templates are powerful model oriented bits of code that can be used to create and maintain your models or code.  The easiest way to get started in working with templates is to download and use existing template libraries as a starting point for your own work (see the &lt;i&gt;Template Libraries and Other Resources&lt;/i&gt; section).
        ///&lt;br&gt;&lt;br&gt;
        ///To generate code, you choose which code template to use in your solution (and optionally for each project as well).  If your solution is not tied to a code template, when you ge [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_StartupWorkingWithTemplatesParagraph1 {
            get {
                return ResourceManager.GetString("Help_StartupWorkingWithTemplatesParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diagrams.
        /// </summary>
        internal static string Help_UIReferenceDiagrammingHeader {
            get {
                return ResourceManager.GetString("Help_UIReferenceDiagrammingHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following image illustrates a diagram that allows additional viewing and editing of entity, relationship, and related information..
        /// </summary>
        internal static string Help_UIReferenceDiagrammingParagraph1 {
            get {
                return ResourceManager.GetString("Help_UIReferenceDiagrammingParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entities can be added to the diagram in any of the following ways:
        ///&lt;ul&gt;
        ///&lt;li&gt;Mouse over the Entities tab on the left hand side, select an entity and drag it onto the canvas.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;Click on the Entities tab to dock it, select an entity and drag it onto the canvas.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;From the Solution Builder window, select an entity and drag it onto the canvas.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;From the Solution Builder window, select a feature and drag all of its entites onto the canvas.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;Right click a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_UIReferenceDiagrammingParagraph2 {
            get {
                return ResourceManager.GetString("Help_UIReferenceDiagrammingParagraph2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drag/Drop, Copy/Paste.
        /// </summary>
        internal static string Help_UIReferenceDragDropHeader {
            get {
                return ResourceManager.GetString("Help_UIReferenceDragDropHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Solution Builder Window&lt;/b&gt;
        ///&lt;br&gt;
        ///Within the Solution Builder window, you can use drag and drop, or copy (Ctrl+c) and paste (Ctrl+V) to accelerate the creation of most of the elements within the solution model.
        ///&lt;br&gt;&lt;br&gt;
        ///There are several ways you can do this:
        ///&lt;ul&gt;
        ///&lt;li&gt;Drag an element from one solution, and drop it in another solution.  You must perform the drop over an element that can be traced to an appropriate parent element for the element you are dropping.  For example, if you are dragging a Pr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_UIReferenceDragDropParagraph1 {
            get {
                return ResourceManager.GetString("Help_UIReferenceDragDropParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Editing Items.
        /// </summary>
        internal static string Help_UIReferenceEditItemHeader {
            get {
                return ResourceManager.GetString("Help_UIReferenceEditItemHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following image illustrates a typical item that can be edited, in this case a method with parameters, etc..
        /// </summary>
        internal static string Help_UIReferenceEditItemParagraph1 {
            get {
                return ResourceManager.GetString("Help_UIReferenceEditItemParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In addition to entering information via inputs, editing an item usually provides the following buttons with Alt+ hot keys:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;Update&lt;/b&gt;: This button updates the information for the item to the model in the Solution Builder window.  No information is saved to disk until the solution itself is saved. This button is enabled once a change has been made to the item.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;&lt;b&gt;Reset&lt;/b&gt;: This button resets the item data to its previous update point.  This button is enabled once a change has b [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_UIReferenceEditItemParagraph2 {
            get {
                return ResourceManager.GetString("Help_UIReferenceEditItemParagraph2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Interface Reference.
        /// </summary>
        internal static string Help_UIReferenceHeader {
            get {
                return ResourceManager.GetString("Help_UIReferenceHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nodes in General.
        /// </summary>
        internal static string Help_UIReferenceOtherNodesHeader {
            get {
                return ResourceManager.GetString("Help_UIReferenceOtherNodesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nearly every node or item in the solution model gives the user the ability to (via a context menu or hot keys):
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;Create New&lt;/b&gt;: This creates a new instance of the item (or similar or child item) and puts it into the Solution Designer window.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;&lt;b&gt;Edit&lt;/b&gt;: This brings up the currently selected item into the Solution Designer window for editing.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;&lt;b&gt;Delete&lt;/b&gt;: This deletes the item from the solution model (after clicking OK on the prompt to delete).&lt;/li&gt;
        ///&lt;/ul&gt;
        ///Ma [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_UIReferenceOtherNodesParagraph1 {
            get {
                return ResourceManager.GetString("Help_UIReferenceOtherNodesParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Mo+ Solution Builder&lt;/b&gt; is a powerful environment (IDE) that allows the user to perform a wide variety of tasks as part of an ongoing model driven development process.  Among the typical tasks that users would do include:
        ///&lt;ul&gt;
        ///&lt;li&gt;Build, edit, and maintain models that represents solutions users want to generate code and documents for.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;Generate and update code and documents for output solutions in a way that is compatible with any customizations users do with those solutions.&lt;br&gt;&lt;/li&gt;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_UIReferenceParagraph1 {
            get {
                return ResourceManager.GetString("Help_UIReferenceParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Mo+ Solution Builder&lt;/b&gt; includes the following applications:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;Windows application (MoPlusSolutionBuilder.exe)&lt;/b&gt;: This is a standalone application that provides all of the Mo+ Solution Builder features, and includes the Solution Builder and Solution Designer windows, and status and output areas.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;&lt;b&gt;Visual Studio extension (MoPlus.SolutionBuilder.VSPackage)&lt;/b&gt;: For Visual Studio users, this extension also provides all of the Mo+ Solution Builder features, in a way that make [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_UIReferenceParagraph2 {
            get {
                return ResourceManager.GetString("Help_UIReferenceParagraph2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solution Designer Window.
        /// </summary>
        internal static string Help_UIReferenceSolutionDesignerHeader {
            get {
                return ResourceManager.GetString("Help_UIReferenceSolutionDesignerHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following image illustrates an example of a couple of items that can appear in the &lt;i&gt;Solution Designer&lt;/i&gt; window, which presents information selected for editing or viewing in a detail format.  Any of the tabbed items can be undocked as floating windows or moved into different tab sections.  Any of the tabbed items can be closed, and if changes in a tab are outstanding, the user is prompted..
        /// </summary>
        internal static string Help_UIReferenceSolutionDesignerParagraph1 {
            get {
                return ResourceManager.GetString("Help_UIReferenceSolutionDesignerParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In the &lt;i&gt;Solution Designer&lt;/i&gt; window, users perform tasks such as:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;Editing Item&lt;/b&gt;s: Users, can edit details on most any item, and update those details.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;&lt;b&gt;Diagramming&lt;/b&gt;: Users can view and edit entity, relationship, and related information in diagram format.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;&lt;b&gt;Editing and Debugging Templates&lt;/b&gt;: Users can edit and debug code and spec templates.  See the Templates section for more details on this.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;&lt;b&gt;Viewing Help&lt;/b&gt;: Users can view help c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_UIReferenceSolutionDesignerParagraph2 {
            get {
                return ResourceManager.GetString("Help_UIReferenceSolutionDesignerParagraph2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solution Node.
        /// </summary>
        internal static string Help_UIReferenceSolutionNodeHeader {
            get {
                return ResourceManager.GetString("Help_UIReferenceSolutionNodeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Solution node (with the name of the solution) enables key tasks (via a context menu or hot keys) on the solution such as:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;New Solution&lt;/b&gt;: This creates a new instance of Solution and puts it into the Solution Designer window.  No file is created.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;&lt;b&gt;Open Solution&lt;/b&gt;: This brings up a dialog to open an existing solution.  If a solution is chosen, it is opened, the model is updated if the solution contains specification sources, and the solution is displayed in the tree vie [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_UIReferenceSolutionNodeParagraph1 {
            get {
                return ResourceManager.GetString("Help_UIReferenceSolutionNodeParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solutions Node/Folder.
        /// </summary>
        internal static string Help_UIReferenceSolutionsNodeHeader {
            get {
                return ResourceManager.GetString("Help_UIReferenceSolutionsNodeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The top level &lt;i&gt;Solutions&lt;/i&gt; node or folder enables tasks (via a context menu or hot keys) on one or more solutions such as:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;New Solution&lt;/b&gt;: This creates a new instance of Solution and puts it into the Solution Designer window.  No file is created.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;&lt;b&gt;Open Solution&lt;/b&gt;: This brings up a dialog to open an existing solution.  If a solution is chosen, it is opened, the model is updated if the solution contains specification sources, and the solution is displayed in the tree vi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_UIReferenceSolutionsNodeParagraph1 {
            get {
                return ResourceManager.GetString("Help_UIReferenceSolutionsNodeParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status and Output.
        /// </summary>
        internal static string Help_UIReferenceStatusOutputHeader {
            get {
                return ResourceManager.GetString("Help_UIReferenceStatusOutputHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Status bar indicates the current status of any background (compile model or update solution) job that is running, and also shows a progress bar for these tasks.  The Status bar appears at the bottom of the window in the windows application, or if running in Visual Studio, is integrated with that IDE&apos;s status bar.
        ///&lt;br&gt;&lt;br&gt;
        ///The Output area gives more detailed information about any background jobs that are running, as well as messaging for any errors that are encountered.  In the windows application, thi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_UIReferenceStatusOutputParagraph1 {
            get {
                return ResourceManager.GetString("Help_UIReferenceStatusOutputParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code Templates.
        /// </summary>
        internal static string Help_UIReferenceTemplatesCodeHeader {
            get {
                return ResourceManager.GetString("Help_UIReferenceTemplatesCodeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code Templates are designed for updating textual solution output of any kind, including source code in any language, models, database scripts, test cases, and documents.  Code template (output) can only update files on disk.  There are many ways to integrate generated code with customizations done outside of &lt;b&gt;Mo+ Solution Builder&lt;/b&gt;, such as use of protected areas and any rules of your making as to when or where to generate code.  Code templates have no platform dependence, other than &lt;b&gt;Mo+ Solution Bui [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_UIReferenceTemplatesCodeParagraph1 {
            get {
                return ResourceManager.GetString("Help_UIReferenceTemplatesCodeParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugging Templates.
        /// </summary>
        internal static string Help_UIReferenceTemplatesDebuggingHeader {
            get {
                return ResourceManager.GetString("Help_UIReferenceTemplatesDebuggingHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Mo+ Solution Builder&lt;/b&gt; provides a rich debugging facility for validating the expected behavior of any template. For additional inspection during the running of jobs, the trace statement can be used in any template code to put inspected values to the output window.
        ///br&gt;&lt;br&gt;
        ///When you open up a &lt;i&gt;Content&lt;/i&gt; or &lt;i&gt;Output&lt;/i&gt; section of a template, additional debugging facilities become available:
        ///&lt;ul&gt;
        ///&lt;li&gt;A breakpoint bar to the left of the line numbers to set breakpoints.&lt;br&gt;&lt;/li&gt;
        ///&lt;li&gt;A green start/ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_UIReferenceTemplatesDebuggingParagraph1 {
            get {
                return ResourceManager.GetString("Help_UIReferenceTemplatesDebuggingParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When a debug job is complete (either finished or stopped), a results dialog comes up with two sections as indicated by tabs on the left hand side:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;Sample Code&lt;/b&gt;: This shows the results of the content (or output) at the end of the debug run (completed or stopped).  No changes are performed to the model or disk during debugging.  If the results are for output, the sample code indicates what items would have been added (+), deleted (-), or modified (&gt;).&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;&lt;b&gt;Abstract Syntax Tree&lt;/ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_UIReferenceTemplatesDebuggingParagraph2 {
            get {
                return ResourceManager.GetString("Help_UIReferenceTemplatesDebuggingParagraph2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Editing Templates.
        /// </summary>
        internal static string Help_UIReferenceTemplatesEditingHeader {
            get {
                return ResourceManager.GetString("Help_UIReferenceTemplatesEditingHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When templates are edited, a rich facility is provided, including syntax highlighting, folding, and some code completion (after typing &quot;.&quot;).  The recognized syntax colors are:
        ///&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;background-color:yellow;color:gray&quot;&gt;&lt;b&gt;Yellow&lt;/b&gt;&lt;/span&gt; for tags&lt;br&gt;&lt;/li&gt;
        ///&lt;li&gt;&lt;span style=&quot;color:darkorange&quot;&gt;&lt;b&gt;Dark Orange&lt;/b&gt;&lt;/span&gt; for raw text to be output&lt;br&gt;&lt;/li&gt;
        ///&lt;li&gt;&lt;span style=&quot;color:darkgreen&quot;&gt;&lt;b&gt;Dark Green&lt;/b&gt;&lt;/span&gt; for comments&lt;br&gt;&lt;/li&gt;
        ///&lt;li&gt;&lt;span style=&quot;color:blue&quot;&gt;&lt;b&gt;Blue&lt;/b&gt;&lt;/span&gt; for valid l [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_UIReferenceTemplatesEditingParagraph1 {
            get {
                return ResourceManager.GetString("Help_UIReferenceTemplatesEditingParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Templates.
        /// </summary>
        internal static string Help_UIReferenceTemplatesHeader {
            get {
                return ResourceManager.GetString("Help_UIReferenceTemplatesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Templates unlock the true power of &lt;b&gt;Mo+ Solution Builder&lt;/b&gt;, and are used to create models and solution output such as source code, models, scripts, and other documents.
        ///&lt;br&gt;&lt;br&gt;
        ///Templates contain code written in the &lt;b&gt;Mo+&lt;/b&gt; programming language, and can accomplish tasks such as:
        ///&lt;ul&gt;
        ///&lt;li&gt;Determining what kind of textual content is to be produced and returned.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;Determining if, when, and where to save content to disk, maintaining protected content on disk as applicable.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_UIReferenceTemplatesParagraph1 {
            get {
                return ResourceManager.GetString("Help_UIReferenceTemplatesParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All templates are divided into 3 sections, as indicated on the tabs on the left hand side of the template.
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;Configuration&lt;/b&gt;: This section determines how the template is to be called and stored on disk.  The template must have a name, which is how the template is known by other templates as well as the file name.  The node indicates what kind of node will be passed as the root model instance when the template is called.  For example, if the template is an Entity template, the template will ALW [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_UIReferenceTemplatesParagraph2 {
            get {
                return ResourceManager.GetString("Help_UIReferenceTemplatesParagraph2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spec Templates.
        /// </summary>
        internal static string Help_UIReferenceTemplatesSpecHeader {
            get {
                return ResourceManager.GetString("Help_UIReferenceTemplatesSpecHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spec Templates are designed for creating and updating solution models, while retaining any customizations entered by users.  Spec template (output) can only update the solution model.  The &lt;b&gt;Mo+&lt;/b&gt; language for managing specification information is platform independent, but connectors have to be developed and applied internally to get information from each type of supported database.
        ///&lt;br&gt;&lt;br&gt;
        ///To set up Spec Templates for generating models:
        ///&lt;ul&gt;
        ///&lt;li&gt;Create or upload a DatabaseSource or XmlSource templa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_UIReferenceTemplatesSpecParagraph1 {
            get {
                return ResourceManager.GetString("Help_UIReferenceTemplatesSpecParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solution Builder Window.
        /// </summary>
        internal static string Help_UIReferenceTreeViewHeader {
            get {
                return ResourceManager.GetString("Help_UIReferenceTreeViewHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following image illustrates an example of what appears in the Solution Builder window, which presents information in a tree view format.  Right click on any node to view the kinds of actions you can take such as editing or creating new items, viewing, saving, or running jobs.  There are also Ctrl+ hot keys assigned to most of these nodes to perform the tasks..
        /// </summary>
        internal static string Help_UIReferenceTreeViewParagraph1 {
            get {
                return ResourceManager.GetString("Help_UIReferenceTreeViewParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tree view includes a number of different kinds of nodes such as:
        ///&lt;ul&gt;
        ///&lt;li&gt;&lt;b&gt;Solutions&lt;/b&gt;: This is the high level node that holds one or more of your solution models in any given session.  From here, you open existing solutions or create new ones.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;&lt;b&gt;Solution (name)&lt;/b&gt;: This node holds all of the model data for a particular solution, and corresponds to a Mo+ Model document (xml) file that is saved to disk.&lt;br&gt;&lt;/li&gt;
        ///
        ///&lt;li&gt;&lt;b&gt;Specification Sources&lt;/b&gt;: Nodes under here specify databas [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_UIReferenceTreeViewParagraph2 {
            get {
                return ResourceManager.GetString("Help_UIReferenceTreeViewParagraph2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The item requested to be deleted was not found..
        /// </summary>
        internal static string Issue_DeleteItemNotFound {
            get {
                return ResourceManager.GetString("Issue_DeleteItemNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Issue Encountered.
        /// </summary>
        internal static string Issue_Intro {
            get {
                return ResourceManager.GetString("Issue_Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t load any library resources data..
        /// </summary>
        internal static string Issue_LibraryResourcesMissing {
            get {
                return ResourceManager.GetString("Issue_LibraryResourcesMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Library Resources.
        /// </summary>
        internal static string Issue_LibraryResourcesTitle {
            get {
                return ResourceManager.GetString("Issue_LibraryResourcesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t load any sql servers..
        /// </summary>
        internal static string Issue_LibrarySQLServerConnection {
            get {
                return ResourceManager.GetString("Issue_LibrarySQLServerConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SQL Servers.
        /// </summary>
        internal static string Issue_LibrarySQLServerConnectionTitle {
            get {
                return ResourceManager.GetString("Issue_LibrarySQLServerConnectionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some entities were not found in the model and not added to the diagram..
        /// </summary>
        internal static string Issue_MissingDiagramEntities {
            get {
                return ResourceManager.GetString("Issue_MissingDiagramEntities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A file name must be specified for saving a solution, etc..
        /// </summary>
        internal static string Issue_MissingFileName {
            get {
                return ResourceManager.GetString("Issue_MissingFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The solution directory &quot;{0}&quot; was not found..
        /// </summary>
        internal static string Issue_SolutionDirectoryNotFound {
            get {
                return ResourceManager.GetString("Issue_SolutionDirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input file {0} was not found for opening a solution..
        /// </summary>
        internal static string Issue_SolutionFileNotFound {
            get {
                return ResourceManager.GetString("Issue_SolutionFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The solution must be saved prior to updating it, please save and try again..
        /// </summary>
        internal static string Issue_SolutionMustBeSaved {
            get {
                return ResourceManager.GetString("Issue_SolutionMustBeSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specification template directory &quot;{0}&quot; was not found..
        /// </summary>
        internal static string Issue_SpecTemplateDirectoryNotFound {
            get {
                return ResourceManager.GetString("Issue_SpecTemplateDirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- None --.
        /// </summary>
        internal static string ListItem_None {
            get {
                return ResourceManager.GetString("ListItem_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap LoadModel {
            get {
                object obj = ResourceManager.GetObject("LoadModel", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Quit Jobs.
        /// </summary>
        internal static string Menu_CancelJobs {
            get {
                return ResourceManager.GetString("Menu_CancelJobs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Exit.
        /// </summary>
        internal static string Menu_Exit {
            get {
                return ResourceManager.GetString("Menu_Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _File.
        /// </summary>
        internal static string Menu_File {
            get {
                return ResourceManager.GetString("Menu_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Help.
        /// </summary>
        internal static string Menu_Help {
            get {
                return ResourceManager.GetString("Menu_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _About Mo+Solution Builder.
        /// </summary>
        internal static string Menu_HelpAbout {
            get {
                return ResourceManager.GetString("Menu_HelpAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Getting Started.
        /// </summary>
        internal static string Menu_HelpGettingStarted {
            get {
                return ResourceManager.GetString("Menu_HelpGettingStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _New Solution.
        /// </summary>
        internal static string Menu_NewSolution {
            get {
                return ResourceManager.GetString("Menu_NewSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Open Solution.
        /// </summary>
        internal static string Menu_OpenSolution {
            get {
                return ResourceManager.GetString("Menu_OpenSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Recent Solutions.
        /// </summary>
        internal static string Menu_RecentSolutions {
            get {
                return ResourceManager.GetString("Menu_RecentSolutions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Save All.
        /// </summary>
        internal static string Menu_SaveAll {
            get {
                return ResourceManager.GetString("Menu_SaveAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solution.
        /// </summary>
        internal static string Message_SolutionIntro {
            get {
                return ResourceManager.GetString("Message_SolutionIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solution {0} is saved..
        /// </summary>
        internal static string Message_SolutionSaved {
            get {
                return ResourceManager.GetString("Message_SolutionSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ModelContext {
            get {
                object obj = ResourceManager.GetObject("ModelContext", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ModelElements {
            get {
                object obj = ResourceManager.GetObject("ModelElements", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap MoPlusDebugWindow {
            get {
                object obj = ResourceManager.GetObject("MoPlusDebugWindow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap MoPlusDiagram {
            get {
                object obj = ResourceManager.GetObject("MoPlusDiagram", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap MoPlusEditItem {
            get {
                object obj = ResourceManager.GetObject("MoPlusEditItem", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap MoPlusModel {
            get {
                object obj = ResourceManager.GetObject("MoPlusModel", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap MoPlusSolutionDesignerWindow {
            get {
                object obj = ResourceManager.GetObject("MoPlusSolutionDesignerWindow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap MoPlusUI {
            get {
                object obj = ResourceManager.GetObject("MoPlusUI", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap MoPlusWorkflow {
            get {
                object obj = ResourceManager.GetObject("MoPlusWorkflow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audit Properties.
        /// </summary>
        internal static string NodeName_AuditProperties {
            get {
                return ResourceManager.GetString("NodeName_AuditProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code Templates.
        /// </summary>
        internal static string NodeName_CodeTemplates {
            get {
                return ResourceManager.GetString("NodeName_CodeTemplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collections.
        /// </summary>
        internal static string NodeName_Collections {
            get {
                return ResourceManager.GetString("NodeName_Collections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database Sources.
        /// </summary>
        internal static string NodeName_DatabaseSources {
            get {
                return ResourceManager.GetString("NodeName_DatabaseSources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diagram.
        /// </summary>
        internal static string NodeName_Diagram {
            get {
                return ResourceManager.GetString("NodeName_Diagram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diagram Entities.
        /// </summary>
        internal static string NodeName_DiagramEntitiess {
            get {
                return ResourceManager.GetString("NodeName_DiagramEntitiess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diagrams.
        /// </summary>
        internal static string NodeName_Diagrams {
            get {
                return ResourceManager.GetString("NodeName_Diagrams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entities.
        /// </summary>
        internal static string NodeName_Entities {
            get {
                return ResourceManager.GetString("NodeName_Entities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity References.
        /// </summary>
        internal static string NodeName_EntityReferences {
            get {
                return ResourceManager.GetString("NodeName_EntityReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enumerations.
        /// </summary>
        internal static string NodeName_Enumerations {
            get {
                return ResourceManager.GetString("NodeName_Enumerations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Features.
        /// </summary>
        internal static string NodeName_Features {
            get {
                return ResourceManager.GetString("NodeName_Features", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indexes.
        /// </summary>
        internal static string NodeName_Indexes {
            get {
                return ResourceManager.GetString("NodeName_Indexes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index Properties.
        /// </summary>
        internal static string NodeName_IndexProperties {
            get {
                return ResourceManager.GetString("NodeName_IndexProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instances.
        /// </summary>
        internal static string NodeName_Instances {
            get {
                return ResourceManager.GetString("NodeName_Instances", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method Relationships.
        /// </summary>
        internal static string NodeName_MethodRelationships {
            get {
                return ResourceManager.GetString("NodeName_MethodRelationships", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Methods.
        /// </summary>
        internal static string NodeName_Methods {
            get {
                return ResourceManager.GetString("NodeName_Methods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model Data.
        /// </summary>
        internal static string NodeName_ModelData {
            get {
                return ResourceManager.GetString("NodeName_ModelData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model Objects.
        /// </summary>
        internal static string NodeName_ModelObjects {
            get {
                return ResourceManager.GetString("NodeName_ModelObjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model Properties.
        /// </summary>
        internal static string NodeName_ModelProperties {
            get {
                return ResourceManager.GetString("NodeName_ModelProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Models.
        /// </summary>
        internal static string NodeName_Models {
            get {
                return ResourceManager.GetString("NodeName_Models", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object Instances.
        /// </summary>
        internal static string NodeName_ObjectInstances {
            get {
                return ResourceManager.GetString("NodeName_ObjectInstances", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameters.
        /// </summary>
        internal static string NodeName_Parameters {
            get {
                return ResourceManager.GetString("NodeName_Parameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Projects.
        /// </summary>
        internal static string NodeName_Projects {
            get {
                return ResourceManager.GetString("NodeName_Projects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties.
        /// </summary>
        internal static string NodeName_Properties {
            get {
                return ResourceManager.GetString("NodeName_Properties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties.
        /// </summary>
        internal static string NodeName_PropertyBases {
            get {
                return ResourceManager.GetString("NodeName_PropertyBases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection.
        /// </summary>
        internal static string NodeName_PropertyCollection {
            get {
                return ResourceManager.GetString("NodeName_PropertyCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property References.
        /// </summary>
        internal static string NodeName_PropertyReferences {
            get {
                return ResourceManager.GetString("NodeName_PropertyReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property Relationships.
        /// </summary>
        internal static string NodeName_PropertyRelationships {
            get {
                return ResourceManager.GetString("NodeName_PropertyRelationships", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Relationship Properties.
        /// </summary>
        internal static string NodeName_RelationshipProperties {
            get {
                return ResourceManager.GetString("NodeName_RelationshipProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Relationships.
        /// </summary>
        internal static string NodeName_Relationships {
            get {
                return ResourceManager.GetString("NodeName_Relationships", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resources.
        /// </summary>
        internal static string NodeName_Resources {
            get {
                return ResourceManager.GetString("NodeName_Resources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Root.
        /// </summary>
        internal static string NodeName_Root {
            get {
                return ResourceManager.GetString("NodeName_Root", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conventions.
        /// </summary>
        internal static string NodeName_SolutionConventions {
            get {
                return ResourceManager.GetString("NodeName_SolutionConventions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [New Solution].
        /// </summary>
        internal static string NodeName_SolutionDefault {
            get {
                return ResourceManager.GetString("NodeName_SolutionDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diagrams.
        /// </summary>
        internal static string NodeName_SolutionDiagrams {
            get {
                return ResourceManager.GetString("NodeName_SolutionDiagrams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solutions.
        /// </summary>
        internal static string NodeName_Solutions {
            get {
                return ResourceManager.GetString("NodeName_Solutions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specification Sources.
        /// </summary>
        internal static string NodeName_SpecificationSources {
            get {
                return ResourceManager.GetString("NodeName_SpecificationSources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spec Templates.
        /// </summary>
        internal static string NodeName_SpecTemplates {
            get {
                return ResourceManager.GetString("NodeName_SpecTemplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workflow Stages.
        /// </summary>
        internal static string NodeName_Stages {
            get {
                return ResourceManager.GetString("NodeName_Stages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stage Transitions.
        /// </summary>
        internal static string NodeName_StageTransitions {
            get {
                return ResourceManager.GetString("NodeName_StageTransitions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State Models.
        /// </summary>
        internal static string NodeName_StateModels {
            get {
                return ResourceManager.GetString("NodeName_StateModels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to States.
        /// </summary>
        internal static string NodeName_States {
            get {
                return ResourceManager.GetString("NodeName_States", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State Transitions.
        /// </summary>
        internal static string NodeName_StateTransitions {
            get {
                return ResourceManager.GetString("NodeName_StateTransitions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steps.
        /// </summary>
        internal static string NodeName_Steps {
            get {
                return ResourceManager.GetString("NodeName_Steps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step Transitions.
        /// </summary>
        internal static string NodeName_StepTransitions {
            get {
                return ResourceManager.GetString("NodeName_StepTransitions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tags.
        /// </summary>
        internal static string NodeName_Tags {
            get {
                return ResourceManager.GetString("NodeName_Tags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audit Property.
        /// </summary>
        internal static string NodeName_Templates_AuditProperty {
            get {
                return ResourceManager.GetString("NodeName_Templates_AuditProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection.
        /// </summary>
        internal static string NodeName_Templates_Collection {
            get {
                return ResourceManager.GetString("NodeName_Templates_Collection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity.
        /// </summary>
        internal static string NodeName_Templates_Entity {
            get {
                return ResourceManager.GetString("NodeName_Templates_Entity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity Reference.
        /// </summary>
        internal static string NodeName_Templates_EntityReference {
            get {
                return ResourceManager.GetString("NodeName_Templates_EntityReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enumeration.
        /// </summary>
        internal static string NodeName_Templates_Enumeration {
            get {
                return ResourceManager.GetString("NodeName_Templates_Enumeration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature.
        /// </summary>
        internal static string NodeName_Templates_Feature {
            get {
                return ResourceManager.GetString("NodeName_Templates_Feature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index.
        /// </summary>
        internal static string NodeName_Templates_Index {
            get {
                return ResourceManager.GetString("NodeName_Templates_Index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index Property.
        /// </summary>
        internal static string NodeName_Templates_IndexProperty {
            get {
                return ResourceManager.GetString("NodeName_Templates_IndexProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method.
        /// </summary>
        internal static string NodeName_Templates_Method {
            get {
                return ResourceManager.GetString("NodeName_Templates_Method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model.
        /// </summary>
        internal static string NodeName_Templates_Model {
            get {
                return ResourceManager.GetString("NodeName_Templates_Model", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model Object.
        /// </summary>
        internal static string NodeName_Templates_ModelObject {
            get {
                return ResourceManager.GetString("NodeName_Templates_ModelObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model Property.
        /// </summary>
        internal static string NodeName_Templates_ModelProperty {
            get {
                return ResourceManager.GetString("NodeName_Templates_ModelProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object Instance.
        /// </summary>
        internal static string NodeName_Templates_ObjectInstance {
            get {
                return ResourceManager.GetString("NodeName_Templates_ObjectInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter.
        /// </summary>
        internal static string NodeName_Templates_Parameter {
            get {
                return ResourceManager.GetString("NodeName_Templates_Parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project.
        /// </summary>
        internal static string NodeName_Templates_Project {
            get {
                return ResourceManager.GetString("NodeName_Templates_Project", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property.
        /// </summary>
        internal static string NodeName_Templates_Property {
            get {
                return ResourceManager.GetString("NodeName_Templates_Property", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property Instance.
        /// </summary>
        internal static string NodeName_Templates_PropertyInstance {
            get {
                return ResourceManager.GetString("NodeName_Templates_PropertyInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property Reference.
        /// </summary>
        internal static string NodeName_Templates_PropertyReference {
            get {
                return ResourceManager.GetString("NodeName_Templates_PropertyReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Relationship.
        /// </summary>
        internal static string NodeName_Templates_Relationship {
            get {
                return ResourceManager.GetString("NodeName_Templates_Relationship", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Relationship Property.
        /// </summary>
        internal static string NodeName_Templates_RelationshipProperty {
            get {
                return ResourceManager.GetString("NodeName_Templates_RelationshipProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sql Column.
        /// </summary>
        internal static string NodeName_Templates_SqlColumn {
            get {
                return ResourceManager.GetString("NodeName_Templates_SqlColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sql Database.
        /// </summary>
        internal static string NodeName_Templates_SqlDatabase {
            get {
                return ResourceManager.GetString("NodeName_Templates_SqlDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sql Extended Property.
        /// </summary>
        internal static string NodeName_Templates_SqlExtendedProperty {
            get {
                return ResourceManager.GetString("NodeName_Templates_SqlExtendedProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sql Foreign Key.
        /// </summary>
        internal static string NodeName_Templates_SqlForeignKey {
            get {
                return ResourceManager.GetString("NodeName_Templates_SqlForeignKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sql Foreign Key Column.
        /// </summary>
        internal static string NodeName_Templates_SqlForeignKeyColumn {
            get {
                return ResourceManager.GetString("NodeName_Templates_SqlForeignKeyColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sql Index.
        /// </summary>
        internal static string NodeName_Templates_SqlIndex {
            get {
                return ResourceManager.GetString("NodeName_Templates_SqlIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sql Indexed Column.
        /// </summary>
        internal static string NodeName_Templates_SqlIndexedColumn {
            get {
                return ResourceManager.GetString("NodeName_Templates_SqlIndexedColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sql Property.
        /// </summary>
        internal static string NodeName_Templates_SqlProperty {
            get {
                return ResourceManager.GetString("NodeName_Templates_SqlProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sql Table.
        /// </summary>
        internal static string NodeName_Templates_SqlTable {
            get {
                return ResourceManager.GetString("NodeName_Templates_SqlTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sql View.
        /// </summary>
        internal static string NodeName_Templates_SqlView {
            get {
                return ResourceManager.GetString("NodeName_Templates_SqlView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sql View Property.
        /// </summary>
        internal static string NodeName_Templates_SqlViewProperty {
            get {
                return ResourceManager.GetString("NodeName_Templates_SqlViewProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stage.
        /// </summary>
        internal static string NodeName_Templates_Stage {
            get {
                return ResourceManager.GetString("NodeName_Templates_Stage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stage Transition.
        /// </summary>
        internal static string NodeName_Templates_StageTransition {
            get {
                return ResourceManager.GetString("NodeName_Templates_StageTransition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State.
        /// </summary>
        internal static string NodeName_Templates_State {
            get {
                return ResourceManager.GetString("NodeName_Templates_State", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State Model.
        /// </summary>
        internal static string NodeName_Templates_StateModel {
            get {
                return ResourceManager.GetString("NodeName_Templates_StateModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State Transition.
        /// </summary>
        internal static string NodeName_Templates_StateTransition {
            get {
                return ResourceManager.GetString("NodeName_Templates_StateTransition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step.
        /// </summary>
        internal static string NodeName_Templates_Step {
            get {
                return ResourceManager.GetString("NodeName_Templates_Step", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step Transition.
        /// </summary>
        internal static string NodeName_Templates_StepTransition {
            get {
                return ResourceManager.GetString("NodeName_Templates_StepTransition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        internal static string NodeName_Templates_Value {
            get {
                return ResourceManager.GetString("NodeName_Templates_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View.
        /// </summary>
        internal static string NodeName_Templates_View {
            get {
                return ResourceManager.GetString("NodeName_Templates_View", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View Property.
        /// </summary>
        internal static string NodeName_Templates_ViewProperty {
            get {
                return ResourceManager.GetString("NodeName_Templates_ViewProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workflow.
        /// </summary>
        internal static string NodeName_Templates_Workflow {
            get {
                return ResourceManager.GetString("NodeName_Templates_Workflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xml Attribute.
        /// </summary>
        internal static string NodeName_Templates_XmlAttribute {
            get {
                return ResourceManager.GetString("NodeName_Templates_XmlAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xml Document.
        /// </summary>
        internal static string NodeName_Templates_XmlDocument {
            get {
                return ResourceManager.GetString("NodeName_Templates_XmlDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xml Node.
        /// </summary>
        internal static string NodeName_Templates_XmlNode {
            get {
                return ResourceManager.GetString("NodeName_Templates_XmlNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Values.
        /// </summary>
        internal static string NodeName_Values {
            get {
                return ResourceManager.GetString("NodeName_Values", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Views.
        /// </summary>
        internal static string NodeName_Views {
            get {
                return ResourceManager.GetString("NodeName_Views", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workflows.
        /// </summary>
        internal static string NodeName_Workflows {
            get {
                return ResourceManager.GetString("NodeName_Workflows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xml Sources.
        /// </summary>
        internal static string NodeName_XmlSources {
            get {
                return ResourceManager.GetString("NodeName_XmlSources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zoom Box.
        /// </summary>
        internal static string NodeName_ZoomBox {
            get {
                return ResourceManager.GetString("NodeName_ZoomBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to %.
        /// </summary>
        internal static string Percent {
            get {
                return ResourceManager.GetString("Percent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Product {
            get {
                object obj = ResourceManager.GetObject("Product", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compiling model for: .
        /// </summary>
        internal static string Progress_CompilingModelIntro {
            get {
                return ResourceManager.GetString("Progress_CompilingModelIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The model update for {0} has been ABORTED.  {1} templates were used with a total of {2} template executions, {3} from the cache..
        /// </summary>
        internal static string Progress_ModelAborted {
            get {
                return ResourceManager.GetString("Progress_ModelAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output solution update for {0} has been ABORTED.  {1} templates were used with a total of {2} template executions, {3} from the cache..
        /// </summary>
        internal static string Progress_ModelSolutionAborted {
            get {
                return ResourceManager.GetString("Progress_ModelSolutionAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output solution for {0} has been updated.  {1} templates were used with a total of {2} template executions, {3} from the cache..
        /// </summary>
        internal static string Progress_ModelSolutionUpdated {
            get {
                return ResourceManager.GetString("Progress_ModelSolutionUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The model for {0} has been updated.  {1} templates were used with a total of {2} template executions, {3} from the cache..
        /// </summary>
        internal static string Progress_ModelUpdated {
            get {
                return ResourceManager.GetString("Progress_ModelUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solution Builder Task.
        /// </summary>
        internal static string Progress_SolutionBuilderTask {
            get {
                return ResourceManager.GetString("Progress_SolutionBuilderTask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating output solution for: .
        /// </summary>
        internal static string Progress_UpdatingOutputSolutionIntro {
            get {
                return ResourceManager.GetString("Progress_UpdatingOutputSolutionIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select All.
        /// </summary>
        internal static string Select_All {
            get {
                return ResourceManager.GetString("Select_All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap SolutionBuilderTreeView {
            get {
                object obj = ResourceManager.GetObject("SolutionBuilderTreeView", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap SpecificationElements {
            get {
                object obj = ResourceManager.GetObject("SpecificationElements", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready.
        /// </summary>
        internal static string Status_Ready {
            get {
                return ResourceManager.GetString("Status_Ready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initialization.
        /// </summary>
        internal static string Task_InitializationTitle {
            get {
                return ResourceManager.GetString("Task_InitializationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save Task.
        /// </summary>
        internal static string Task_SaveTitle {
            get {
                return ResourceManager.GetString("Task_SaveTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abstract Syntax Tree.
        /// </summary>
        internal static string Template_ASTLabel {
            get {
                return ResourceManager.GetString("Template_ASTLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parsing Content Results for.
        /// </summary>
        internal static string Template_ParsingContentIntro {
            get {
                return ResourceManager.GetString("Template_ParsingContentIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parsing Output Results for.
        /// </summary>
        internal static string Template_ParsingOutputIntro {
            get {
                return ResourceManager.GetString("Template_ParsingOutputIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parsing Results.
        /// </summary>
        internal static string Template_ParsingResultsLabel {
            get {
                return ResourceManager.GetString("Template_ParsingResultsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parsing Specification Results for.
        /// </summary>
        internal static string Template_ParsingSpecificationIntro {
            get {
                return ResourceManager.GetString("Template_ParsingSpecificationIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sample Code.
        /// </summary>
        internal static string Template_SampleCodeLabel {
            get {
                return ResourceManager.GetString("Template_SampleCodeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap TemplateCalls {
            get {
                object obj = ResourceManager.GetObject("TemplateCalls", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initialization has been completed..
        /// </summary>
        internal static string Thread_InitializationDone {
            get {
                return ResourceManager.GetString("Thread_InitializationDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must wait for the previous initialization job to complete prior to starting a new job..
        /// </summary>
        internal static string Thread_InitializationThreadBusy {
            get {
                return ResourceManager.GetString("Thread_InitializationThreadBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must wait for the {0} job to complete prior to starting a new job..
        /// </summary>
        internal static string Thread_ThreadBusy {
            get {
                return ResourceManager.GetString("Thread_ThreadBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the tag must not contain any spaces..
        /// </summary>
        internal static string Validation_TagName {
            get {
                return ResourceManager.GetString("Validation_TagName", resourceCulture);
            }
        }
    }
}
