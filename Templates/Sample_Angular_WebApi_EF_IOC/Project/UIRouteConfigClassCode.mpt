<CONFIG>
	NAME UIRouteConfigClassCode
	CATEGORY UI
	NODE Project
	TOPLEVEL False
</CONFIG>
<CONTENT>
<%%=USETABS true%%>
<%%:
<%%-/*<copyright>
%%>
<%%=Solution.Copyright%%><%%-
</copyright>*/
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using System.Web.Routing;

namespace %%><%%=Project.Namespace%%>
<%%=Solution.OPEN_BRACE%%><%%-
	//------------------------------------------------------------------------------
	/// <summary>This class registers routes.</summary>
	///
	/// This file is code generated and should not be modified by hand.
	/// If you need to customize outside of protected areas, add those changes
	/// in another partial class file.  As a last resort (if generated code needs
	/// to be different), change the Status value below to something other than
	/// Generated to prevent changes from being overwritten.
	///
	/// <CreatedByUserName>%%><%%=USER%%><%%-</CreatedByUserName>
	/// <CreatedDate>%%><%%=NOW%%><%%-</CreatedDate>
	/// <Status>Generated</Status>
	//------------------------------------------------------------------------------
	public partial class RouteConfig%%>
	<%%=Solution.OPEN_BRACE%%>
		<%%=Solution.NEWLINE%%>
		<%%-public static void RegisterRoutes(RouteCollection routes)%%>
		<%%=Solution.OPEN_BRACE%%>
			<%%=Solution.NEWLINE%%>
			<%%-routes.IgnoreRoute("{resource}.axd/{*pathInfo}");%%>
			<%%=Solution.NEWLINE%%>
			<%%-routes.MapMvcAttributeRoutes();%%>
/*			foreach (Entity in Solution where VITAIsAdminUIEntity == true)
			{
				<%%-
			
				routes.MapRoute(%%><%%=Solution.INDENT%%><%%-
					name: "%%><%%=VITAClassName.CamelCase()%%><%%-Search",
					url: "route/%%><%%=LIBPluralEntityName.CamelCase()%%><%%-",
					defaults: new { controller = "%%><%%=LIBPluralEntityName%%><%%-", action = "Search" });%%><%%=Solution.OUTDENT%%><%%-
			
				routes.MapRoute(%%><%%=Solution.INDENT%%><%%-
					name: "%%><%%=VITAClassName.CamelCase()%%><%%-Results",
					url: "route/%%><%%=LIBPluralEntityName.CamelCase()%%><%%-/Results",
					defaults: new { controller = "%%><%%=LIBPluralEntityName%%><%%-", action = "Results" });%%><%%=Solution.OUTDENT%%><%%-
			
				routes.MapRoute(%%><%%=Solution.INDENT%%><%%-
					name: "%%><%%=VITAClassName.CamelCase()%%><%%-Get",
					url: "route/%%><%%=LIBPluralEntityName.CamelCase()%%><%%-/Get",
					defaults: new { controller = "%%><%%=LIBPluralEntityName%%><%%-", action = "Get" });%%><%%=Solution.OUTDENT%%><%%-
			
				routes.MapRoute(%%><%%=Solution.INDENT%%><%%-
					name: "%%><%%=VITAClassName.CamelCase()%%><%%-Create",
					url: "route/%%><%%=LIBPluralEntityName.CamelCase()%%><%%-/Create",
					defaults: new { controller = "%%><%%=LIBPluralEntityName%%><%%-", action = "Create" });%%><%%=Solution.OUTDENT%%><%%-
			
				routes.MapRoute(%%><%%=Solution.INDENT%%><%%-
					name: "%%><%%=VITAClassName.CamelCase()%%><%%-Update",
					url: "route/%%><%%=LIBPluralEntityName.CamelCase()%%><%%-/Update",
					defaults: new { controller = "%%><%%=LIBPluralEntityName%%><%%-", action = "Update" });%%><%%=Solution.OUTDENT%%><%%-
			
				routes.MapRoute(%%><%%=Solution.INDENT%%><%%-
					name: "%%><%%=VITAClassName.CamelCase()%%><%%-Delete",
					url: "route/%%><%%=LIBPluralEntityName.CamelCase()%%><%%-/Delete",
					defaults: new { controller = "%%><%%=LIBPluralEntityName%%><%%-", action = "Delete" });%%><%%=Solution.OUTDENT%%>
			}*/
			<%%-
			
				routes.MapRoute(%%><%%=Solution.INDENT%%><%%-
					name: "settings",
					url: "home/config",
					defaults: new { controller = "Home", action = "Config" });%%><%%=Solution.OUTDENT%%><%%-
			
				routes.MapRoute(%%><%%=Solution.INDENT%%><%%-
					name: "Default",
					url: "{controller}/{action}/{id}",
					defaults: new { controller = "Home", action = "Index", id = UrlParameter.Optional });%%><%%=Solution.OUTDENT%%>
		<%%=Solution.CLOSE_BRACE%%>
	<%%=Solution.CLOSE_BRACE%%>
<%%=Solution.CLOSE_BRACE%%>
%%></CONTENT><OUTPUT>
<%%:
if (Solution.ShouldUpdateFile(path=UIRouteConfigClassFilePath, text=Text) == true)
{
	update(UIRouteConfigClassFilePath)
}
%%></OUTPUT>